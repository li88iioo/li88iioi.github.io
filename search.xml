<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>萧瑟秋风今又是，换了人间</title>
      <link href="/2024/12/04/123/"/>
      <url>/2024/12/04/123/</url>
      
        <content type="html"><![CDATA[<h5 id=""><a href="#" class="headerlink" title=""></a></h5><blockquote><p>[毛泽东] - 《<a href="https://baike.baidu.com/item/%E6%B5%AA%E6%B7%98%E6%B2%99%C2%B7%E5%8C%97%E6%88%B4%E6%B2%B3/5958852">浪淘沙·北戴河</a>》</p></blockquote><p> <strong>原文</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">大雨落幽燕，白浪滔天，秦皇岛外打鱼船。一片汪洋都不见，知向谁边？</span><br><span class="line">往事越千年，魏武挥鞭，东临碣石有遗篇。萧瑟秋风今又是，换了人间。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简单的服务器安全配置脚本</title>
      <link href="/2024/11/24/%E9%80%82%E7%94%A8%E4%BA%8EDebian%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/11/24/%E9%80%82%E7%94%A8%E4%BA%8EDebian%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近老是想买些便宜VPS。每次配置服务器安全都要手挫半天，最后让Claude搓了个脚本，免得冬天手生疮<br>#适用于Debian服务器</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># 设置颜色输出</span><br><span class="line">RED=&#x27;\033[0;31m&#x27;</span><br><span class="line">GREEN=&#x27;\033[0;32m&#x27;</span><br><span class="line">BLUE=&#x27;\033[0;34m&#x27;</span><br><span class="line">YELLOW=&#x27;\033[1;33m&#x27;</span><br><span class="line">BOLD=&#x27;\033[1m&#x27;</span><br><span class="line">NC=&#x27;\033[0m&#x27;</span><br><span class="line"></span><br><span class="line"># 错误处理函数</span><br><span class="line">error_exit() &#123;</span><br><span class="line">    echo -e &quot;$&#123;RED&#125;错误: $1$&#123;NC&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 成功提示函数</span><br><span class="line">success_msg() &#123;</span><br><span class="line">    echo -e &quot;$&#123;GREEN&#125;成功: $1$&#123;NC&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 检查程序是否安装</span><br><span class="line">check_installed() &#123;</span><br><span class="line">    local service_name=$1</span><br><span class="line">    if ! command -v $service_name &amp;&gt; /dev/null; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;错误: $service_name 未安装$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    if ! systemctl is-active --quiet $service_name; then</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;警告: $service_name 服务未运行$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    return 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 分隔线</span><br><span class="line">show_separator() &#123;</span><br><span class="line">    echo -e &quot;$&#123;BLUE&#125;------------------------------------$&#123;NC&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 1. 系统更新和curl安装</span><br><span class="line">system_update() &#123;</span><br><span class="line">    echo &quot;正在更新系统...&quot;</span><br><span class="line">    apt update &amp;&amp; apt upgrade -y || error_exit &quot;系统更新失败&quot;</span><br><span class="line">    apt install curl -y || error_exit &quot;curl安装失败&quot;</span><br><span class="line">    success_msg &quot;系统更新完成，curl已安装&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 2. SSH端口相关函数</span><br><span class="line">modify_ssh_port() &#123;</span><br><span class="line">    read -p &quot;请输入新的SSH端口号(1-65535): &quot; new_port</span><br><span class="line">    if ! [[ &quot;$new_port&quot; =~ ^[0-9]+$ ]] || [ &quot;$new_port&quot; -lt 1 ] || [ &quot;$new_port&quot; -gt 65535 ]; then</span><br><span class="line">        error_exit &quot;无效的端口号&quot;</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    sed -i &quot;s/#Port 22/Port $new_port/&quot; /etc/ssh/sshd_config</span><br><span class="line">    sed -i &quot;s/Port [0-9]*/Port $new_port/&quot; /etc/ssh/sshd_config</span><br><span class="line">    systemctl restart sshd || error_exit &quot;SSH重启失败&quot;</span><br><span class="line">    success_msg &quot;SSH端口已修改为: $new_port&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_ssh_port() &#123;</span><br><span class="line">    current_port=$(grep &quot;^Port&quot; /etc/ssh/sshd_config | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">    echo &quot;当前SSH端口: $&#123;current_port:-22&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># SSH密钥认证配置</span><br><span class="line">configure_ssh_key() &#123;</span><br><span class="line">    if [ ! -f ~/.ssh/authorized_keys ]; then</span><br><span class="line">        echo &quot;未找到authorized_keys文件&quot;</span><br><span class="line">        read -p &quot;是否现在配置SSH密钥?！！！请提前上传密钥以免麻烦 (y/n): &quot; answer</span><br><span class="line">        if [ &quot;$answer&quot; = &quot;y&quot; ]; then</span><br><span class="line">            mkdir -p ~/.ssh</span><br><span class="line">            chmod 700 ~/.ssh</span><br><span class="line">            touch ~/.ssh/authorized_keys</span><br><span class="line">            chmod 600 ~/.ssh/authorized_keys</span><br><span class="line">            </span><br><span class="line">            echo &quot;请选择密钥配置方式:&quot;</span><br><span class="line">            echo &quot;1. 手动复制密钥&quot;</span><br><span class="line">            echo &quot;2. 输入密钥内容&quot;</span><br><span class="line">            read -p &quot;请选择 (1/2): &quot; key_choice</span><br><span class="line">            </span><br><span class="line">            case $key_choice in</span><br><span class="line">                1)</span><br><span class="line">                    echo &quot;请将您的公钥复制到 ~/.ssh/authorized_keys 文件中&quot;</span><br><span class="line">                    ;;</span><br><span class="line">                2)</span><br><span class="line">                    echo &quot;请输入您的公钥内容:&quot;</span><br><span class="line">                    read -r pubkey</span><br><span class="line">                    echo &quot;$pubkey&quot; &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">                    if [ $? -eq 0 ]; then</span><br><span class="line">                        success_msg &quot;密钥已添加成功&quot;</span><br><span class="line">                    else</span><br><span class="line">                        error_exit &quot;密钥添加失败&quot;</span><br><span class="line">                    fi</span><br><span class="line">                    ;;</span><br><span class="line">                *)</span><br><span class="line">                    echo &quot;无效的选择&quot;</span><br><span class="line">                    ;;</span><br><span class="line">            esac</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        read -p &quot;是否禁用密码登录? (y/n): &quot; answer</span><br><span class="line">        if [ &quot;$answer&quot; = &quot;y&quot; ]; then</span><br><span class="line">            sed -i &#x27;s/#PasswordAuthentication yes/PasswordAuthentication no/&#x27; /etc/ssh/sshd_config</span><br><span class="line">            sed -i &#x27;s/PasswordAuthentication yes/PasswordAuthentication no/&#x27; /etc/ssh/sshd_config</span><br><span class="line">            systemctl restart sshd</span><br><span class="line">            success_msg &quot;已开启仅SSH密钥认证登录&quot;</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 3. UFW防火墙配置</span><br><span class="line">install_ufw() &#123;</span><br><span class="line">    apt install ufw -y || error_exit &quot;UFW安装失败&quot;</span><br><span class="line">    systemctl enable ufw</span><br><span class="line">    systemctl start ufw</span><br><span class="line">    success_msg &quot;UFW已安装并启动&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configure_ufw() &#123;</span><br><span class="line">    if ! command -v ufw &amp;&gt; /dev/null; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;请先安装UFW$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    current_port=$(grep &quot;^Port&quot; /etc/ssh/sshd_config | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">    ufw allow $&#123;current_port:-22&#125;/tcp || error_exit &quot;UFW配置SSH端口失败&quot;</span><br><span class="line">    ufw enable || error_exit &quot;UFW启动失败&quot;</span><br><span class="line">    success_msg &quot;UFW已启用并开放SSH端口&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configure_ufw_ping() &#123;</span><br><span class="line">    if ! command -v ufw &amp;&gt; /dev/null; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;请先安装UFW$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi  </span><br><span class="line">    </span><br><span class="line">    read -p &quot;是否禁止PING? (y/n): &quot; answer</span><br><span class="line">    if [ &quot;$answer&quot; = &quot;y&quot; ]; then</span><br><span class="line">        ufw insert 1 deny proto icmp || error_exit &quot;UFW配置PING规则失败&quot;</span><br><span class="line">        success_msg &quot;已禁止PING&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_ufw_status() &#123;</span><br><span class="line">    if ! command -v ufw &amp;&gt; /dev/null; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;请先安装UFW$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    echo &quot;UFW状态:&quot;</span><br><span class="line">    ufw status verbose</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 检查Fail2ban服务状态</span><br><span class="line">is_fail2ban_installed() &#123;</span><br><span class="line">    if ! command -v fail2ban-client &amp;&gt; /dev/null; then</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    return 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 4. Fail2ban配置</span><br><span class="line">install_fail2ban() &#123;</span><br><span class="line">    # 检查是否安装了 lsb-release，如果没有，尝试安装它</span><br><span class="line">    if ! command -v lsb_release &amp;&gt; /dev/null; then</span><br><span class="line">        echo &quot;检测到 lsb_release 未安装，尝试安装 lsb-release 包...&quot;</span><br><span class="line">        apt-get install lsb-release -y || error_exit &quot;安装 lsb-release 失败&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # 获取系统版本</span><br><span class="line">    debian_version=$(lsb_release -r | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">    </span><br><span class="line">    # 如果 lsb_release 失败，尝试从 /etc/os-release 中获取版本</span><br><span class="line">    if [ -z &quot;$debian_version&quot; ]; then</span><br><span class="line">        echo &quot;无法通过 lsb_release 获取版本，尝试从 /etc/os-release 获取...&quot;</span><br><span class="line">        debian_version=$(grep &quot;VERSION_ID&quot; /etc/os-release | cut -d &#x27;&quot;&#x27; -f 2)</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    # 如果是 Debian 12 或更高版本，安装 rsyslog</span><br><span class="line">    if [ &quot;$(echo $debian_version | cut -d&#x27;.&#x27; -f1)&quot; -ge 12 ]; then</span><br><span class="line">        echo &quot;检测到 Debian 12 或更高版本，安装 rsyslog...&quot;</span><br><span class="line">        apt-get install rsyslog -y || error_exit &quot;rsyslog 安装失败&quot;</span><br><span class="line">        </span><br><span class="line">        # 启动并启用 rsyslog 服务</span><br><span class="line">        systemctl enable rsyslog</span><br><span class="line">        systemctl start rsyslog</span><br><span class="line">        </span><br><span class="line">        echo &quot;rsyslog 已安装并启动&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;当前不是 Debian 12 或更高版本，无需安装 rsyslog&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # 安装 Fail2ban</span><br><span class="line">    apt install fail2ban -y || error_exit &quot;Fail2ban安装失败&quot;</span><br><span class="line">    systemctl enable fail2ban</span><br><span class="line">    systemctl start fail2ban</span><br><span class="line">    success_msg &quot;Fail2ban已安装并启动&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configure_fail2ban_ssh() &#123;</span><br><span class="line">    if ! command -v fail2ban-client &amp;&gt; /dev/null; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;请先安装Fail2ban$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    read -p &quot;请输入最大尝试次数: &quot; maxretry</span><br><span class="line">    read -p &quot;请输入封禁时间(秒，-1为永久): &quot; bantime</span><br><span class="line">    </span><br><span class="line">    # 获取SSH端口，默认使用22端口</span><br><span class="line">    port=$(grep &quot;^Port&quot; /etc/ssh/sshd_config | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">    if [ -z &quot;$port&quot; ]; then</span><br><span class="line">        port=22  # 默认端口为22</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # 生成 Fail2ban 配置，添加 DEFAULT 部分</span><br><span class="line">    cat &gt; /etc/fail2ban/jail.local &lt;&lt; EOF</span><br><span class="line">[DEFAULT]</span><br><span class="line">bantime = $bantime</span><br><span class="line">findtime = 600</span><br><span class="line">maxretry = $maxretry</span><br><span class="line"></span><br><span class="line">[sshd]</span><br><span class="line">enabled = true</span><br><span class="line">port = $port</span><br><span class="line">filter = sshd</span><br><span class="line">logpath = /var/log/auth.log</span><br><span class="line">maxretry = $maxretry</span><br><span class="line">bantime = $bantime</span><br><span class="line">findtime = 600</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">    # 重新启动 fail2ban 服务并检查其是否成功启动</span><br><span class="line">    systemctl restart fail2ban</span><br><span class="line">    if ! systemctl is-active --quiet fail2ban; then</span><br><span class="line">        error_exit &quot;Fail2ban服务启动失败&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    success_msg &quot;Fail2ban SSH配置完成&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_fail2ban_status() &#123;</span><br><span class="line">    if ! systemctl is-active --quiet fail2ban; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;Fail2ban服务未运行$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    echo &quot;Fail2ban状态:&quot;</span><br><span class="line">    fail2ban-client status</span><br><span class="line">    echo &quot;SSH状态:&quot;</span><br><span class="line">    fail2ban-client status sshd</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 5. ZeroTier配置</span><br><span class="line">install_zerotier() &#123;</span><br><span class="line">    curl -s https://install.zerotier.com | bash || error_exit &quot;ZeroTier安装失败&quot;</span><br><span class="line">    systemctl enable zerotier-one</span><br><span class="line">    systemctl start zerotier-one</span><br><span class="line">    </span><br><span class="line">    # 等待服务完全启动</span><br><span class="line">    sleep 5</span><br><span class="line">    </span><br><span class="line">    read -p &quot;请输入ZeroTier网络ID: &quot; network_id</span><br><span class="line">    if [[ ! $network_id =~ ^[0-9a-f]&#123;16&#125;$ ]]; then</span><br><span class="line">        error_exit &quot;无效的网络ID格式&quot;</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    zerotier-cli join &quot;$network_id&quot;</span><br><span class="line">    success_msg &quot;ZeroTier已安装并加入网络&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check_zerotier_status() &#123;</span><br><span class="line">    if ! systemctl is-active --quiet zerotier-one; then</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;ZeroTier服务未运行$&#123;NC&#125;&quot;</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    echo &quot;ZeroTier状态:&quot;</span><br><span class="line">    zerotier-cli status</span><br><span class="line">    echo &quot;网络信息:&quot;</span><br><span class="line">    zerotier-cli listnetworks</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configure_zerotier_ssh() &#123;</span><br><span class="line">    if ! check_installed zerotier-cli; then</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    read -p &quot;请输入ZeroTier虚拟IP段(例如: 192.168.192.0/24): &quot; zt_network</span><br><span class="line">    current_port=$(grep &quot;^Port&quot; /etc/ssh/sshd_config | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">    ufw allow from &quot;$zt_network&quot; to any port $&#123;current_port:-22&#125; proto tcp</span><br><span class="line">    success_msg &quot;已开放ZeroTier网段的SSH访问&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 6. 1Panel安装</span><br><span class="line">install_1panel() &#123;</span><br><span class="line">    read -p &quot;是否安装1Panel? (y/n): &quot; answer</span><br><span class="line">    if [ &quot;$answer&quot; = &quot;y&quot; ]; then</span><br><span class="line">        curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 7. v2ray-agent安装</span><br><span class="line">install_v2ray_agent() &#123;</span><br><span class="line">    read -p &quot;是否安装v2ray-agent? (y/n): &quot; answer</span><br><span class="line">    if [ &quot;$answer&quot; = &quot;y&quot; ]; then</span><br><span class="line">        wget -P /root -N --no-check-certificate https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 子菜单 - SSH配置</span><br><span class="line">ssh_menu() &#123;</span><br><span class="line">    while true; do</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;========= SSH配置菜单 ==========$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;1. 修改SSH端口$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;2. 查看当前SSH端口$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;3. 配置SSH密钥认证$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;0. 返回主菜单$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;================================$&#123;NC&#125;&quot;</span><br><span class="line">        </span><br><span class="line">        read -p &quot;请选择操作: &quot; choice</span><br><span class="line">        case $choice in</span><br><span class="line">            1) modify_ssh_port ;;</span><br><span class="line">            2) check_ssh_port ;;</span><br><span class="line">            3) configure_ssh_key ;;</span><br><span class="line">            0) return ;;</span><br><span class="line">            *) echo -e &quot;$&#123;RED&#125;无效的选择$&#123;NC&#125;&quot; ;;</span><br><span class="line">        esac</span><br><span class="line">        read -p &quot;按回车键继续...&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 子菜单 - UFW配置</span><br><span class="line">ufw_menu() &#123;</span><br><span class="line">    while true; do</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;========= UFW配置菜单 ==========$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;1. 安装UFW$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;2. 配置UFW并开放SSH端口$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;3. 配置UFW PING规则$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;4. 查看UFW状态$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;0. 返回主菜单$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;================================$&#123;NC&#125;&quot;</span><br><span class="line">        </span><br><span class="line">        read -p &quot;请选择操作: &quot; choice</span><br><span class="line">        case $choice in</span><br><span class="line">            1) install_ufw ;;</span><br><span class="line">            2) configure_ufw ;;</span><br><span class="line">            3) configure_ufw_ping ;;</span><br><span class="line">            4) check_ufw_status ;;</span><br><span class="line">            0) return ;;</span><br><span class="line">            *) echo -e &quot;$&#123;RED&#125;无效的选择$&#123;NC&#125;&quot; ;;</span><br><span class="line">        esac</span><br><span class="line">        read -p &quot;按回车键继续...&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 子菜单 - Fail2ban配置</span><br><span class="line">fail2ban_menu() &#123;</span><br><span class="line">    while true; do</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;======== Fail2ban配置菜单 ========$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;1. 安装Fail2ban$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;2. 配置Fail2ban SSH防护$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;3. 查看Fail2ban状态$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;0. 返回主菜单$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;================================$&#123;NC&#125;&quot;</span><br><span class="line">        </span><br><span class="line">        read -p &quot;请选择操作: &quot; choice</span><br><span class="line">        case $choice in</span><br><span class="line">            1) install_fail2ban ;;</span><br><span class="line">            2) configure_fail2ban_ssh ;;</span><br><span class="line">            3) check_fail2ban_status ;;</span><br><span class="line">            0) return ;;</span><br><span class="line">            *) echo -e &quot;$&#123;RED&#125;无效的选择$&#123;NC&#125;&quot; ;;</span><br><span class="line">        esac</span><br><span class="line">        read -p &quot;按回车键继续...&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 子菜单 - ZeroTier配置</span><br><span class="line">zerotier_menu() &#123;</span><br><span class="line">    while true; do</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;======= ZeroTier配置菜单 ========$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;1. 安装并加入网络$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;2. 查看ZeroTier状态$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;YELLOW&#125;3. 配置ZeroTier SSH访问$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;0. 返回主菜单$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;================================$&#123;NC&#125;&quot;</span><br><span class="line">        </span><br><span class="line">        read -p &quot;请选择操作: &quot; choice</span><br><span class="line">        case $choice in</span><br><span class="line">            1) install_zerotier ;;</span><br><span class="line">            2) check_zerotier_status ;;</span><br><span class="line">            3) configure_zerotier_ssh ;;</span><br><span class="line">            0) return ;;</span><br><span class="line">            *) echo -e &quot;$&#123;RED&#125;无效的选择$&#123;NC&#125;&quot; ;;</span><br><span class="line">        esac</span><br><span class="line">        read -p &quot;按回车键继续...&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 清屏函数</span><br><span class="line">clear_screen() &#123;</span><br><span class="line">    clear || echo -e &quot;\n\n\n\n\n&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 主菜单</span><br><span class="line">main_menu() &#123;</span><br><span class="line">    while true; do</span><br><span class="line">        clear_screen</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;$&#123;BOLD&#125;===== 服务器 简单安全 配置菜单 =====$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;1. 更新系统并安装curl$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;2. SSH端口配置$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;3. UFW防火墙配置$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;4. Fail2ban配置$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;5. ZeroTier配置$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;6. 安装1Panel$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;GREEN&#125;$&#123;BOLD&#125;7. 安装v2ray-agent$&#123;NC&#125;&quot;</span><br><span class="line">        show_separator</span><br><span class="line">        echo -e &quot;$&#123;RED&#125;$&#123;BOLD&#125;0. 退出$&#123;NC&#125;&quot;</span><br><span class="line">        echo -e &quot;$&#123;BLUE&#125;$&#123;BOLD&#125;====================================$&#123;NC&#125;&quot;</span><br><span class="line">        </span><br><span class="line">        read -p &quot;请选择操作: &quot; choice</span><br><span class="line">        case $choice in</span><br><span class="line">            1) system_update ;;</span><br><span class="line">            2) ssh_menu ;;</span><br><span class="line">            3) ufw_menu ;;</span><br><span class="line">            4) fail2ban_menu ;;</span><br><span class="line">            5) zerotier_menu ;;</span><br><span class="line">            6) install_1panel ;;</span><br><span class="line">            7) install_v2ray_agent ;;</span><br><span class="line">            0) exit 0 ;;</span><br><span class="line">            *) echo -e &quot;$&#123;RED&#125;无效的选择$&#123;NC&#125;&quot; ;;</span><br><span class="line">        esac</span><br><span class="line">        [ &quot;$choice&quot; != &quot;0&quot; ] &amp;&amp; read -p &quot;按回车键继续...&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 检查root权限</span><br><span class="line">if [ &quot;$EUID&quot; -ne 0 ]; then </span><br><span class="line">    error_exit &quot;请使用root权限运行此脚本&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 运行主菜单</span><br><span class="line">main_menu</span><br></pre></td></tr></table></figure><h3 id="主要功能如下"><a href="#主要功能如下" class="headerlink" title="主要功能如下"></a>主要功能如下</h3><h4 id="1-系统更新与工具安装："><a href="#1-系统更新与工具安装：" class="headerlink" title="1. 系统更新与工具安装："></a>1. <strong>系统更新与工具安装</strong>：</h4><ul><li>执行系统更新并安装 <code>curl</code>（一个常用的命令行工具，用于进行 HTTP 请求）。</li></ul><h4 id="2-SSH-配置："><a href="#2-SSH-配置：" class="headerlink" title="2. SSH 配置："></a>2. <strong>SSH 配置</strong>：</h4><ul><li>修改 SSH 默认端口，避免暴力破解攻击。</li><li>配置 SSH 密钥认证，禁用密码登录以增加 SSH 安全性。</li></ul><h4 id="3-UFW-防火墙配置："><a href="#3-UFW-防火墙配置：" class="headerlink" title="3. UFW 防火墙配置："></a>3. <strong>UFW 防火墙配置</strong>：</h4><ul><li>安装并配置 <code>UFW</code>（Uncomplicated Firewall），用来管理防火墙规则。</li><li>设置 UFW 规则，允许特定端口（如 SSH 端口）访问，禁止 ICMP (PING) 请求。</li></ul><h4 id="4-Fail2ban-安装与配置："><a href="#4-Fail2ban-安装与配置：" class="headerlink" title="4. Fail2ban 安装与配置："></a>4. <strong>Fail2ban 安装与配置</strong>：</h4><ul><li>安装 <code>Fail2ban</code> 服务，防止暴力破解攻击。</li><li>配置 Fail2ban 保护 SSH 服务。</li></ul><h4 id="5-ZeroTier-配置："><a href="#5-ZeroTier-配置：" class="headerlink" title="5. ZeroTier 配置："></a>5. <strong>ZeroTier 配置</strong>：</h4><ul><li>安装 ZeroTier（一个虚拟局域网软件），并允许服务器加入一个 ZeroTier 网络。</li><li>配置 ZeroTier 网络上的 SSH 访问。</li></ul><h4 id="6-其他工具安装："><a href="#6-其他工具安装：" class="headerlink" title="6. 其他工具安装："></a>6. <strong>其他工具安装</strong>：</h4><ul><li>提供选项安装 <strong>1Panel</strong>和 <strong>v2ray-agent</strong>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下FRP XTCP的配置方法</title>
      <link href="/2024/03/19/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BFRP%20XTCP%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
      <url>/2024/03/19/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BFRP%20XTCP%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="记录一下FRP-XTCP的配置方法"><a href="#记录一下FRP-XTCP的配置方法" class="headerlink" title="记录一下FRP XTCP的配置方法"></a>记录一下FRP XTCP的配置方法</h2><blockquote><p><strong>什么是xtcp</strong><br>在 FRP（Fast Reverse Proxy）的 XTCP 功能中，<code>frps</code>（FRP<br>服务端）扮演着至关重要的角色，尽管它不直接参与数据的最终传输。XTCP 是一种穿透技术，使得处于不同 NAT<br>或防火墙后的两个网络设备能够建立直接的连接。在这种模式下，<code>frps</code> 的作用主要包括：</p><ol><li><p><strong>中继握手信息</strong>：当两个客户端（通过 <code>frpc</code> 运行）尝试建立 XTCP 连接时，<code>frps</code> 作为中介，负责转发这两个客户端之间的握手信息。这是建立 P2P（点对点）连接的先决条件，因为大多数客户端都处在 NAT<br>或防火墙后面，无法直接发现对方或建立连接。</p></li><li><p><strong>协助穿透 NAT</strong>：在 XTCP 的握手过程中，<code>frps</code> 会帮助两端的 <code>frpc</code> 客户端交换必要的信息（如公网 IP 地址和端口），这些信息是实现 NAT 穿透的关键。通过这种方式，即便客户端位于复杂的网络环境中，也能够尝试直接相互连接。</p></li><li><p><strong>回退到中继传输（可选）</strong>：在某些情况下，比如当 NAT 类型特别严格或环境复杂到阻碍了直接的 P2P 连接时，<code>frps</code> 可以提供回退方案，即通过服务器中继来传输数据。虽然这增加了延迟并需要更多的服务器带宽，但它确保了连接的可靠性。需要注意的是，FRP 的<br>XTCP 功能主要目标是尽量实现直接的 P2P 连接，而不依赖服务器中继传输数据。</p></li><li><p><strong>安全性和访问控制</strong>：<code>frps</code> 还管理着客户端的认证过程，确保只有授权的客户端可以建立连接。此外，它可以对连接进行加密和压缩设置，提高数据传输的安全性和效率。</p></li></ol><p>总之，虽然 <code>frps</code> 在 XTCP<br>模式下的数据传输过程中不直接参与数据的最终传递，但它在建立连接的初期阶段发挥着至关重要的作用，包括但不限于握手信息的中继、帮助实现 NAT<br>穿透、提供回退的中继传输方案以及执行安全性和访问控制。for ChatGPT</p></blockquote><h3 id="1-确认环境要求"><a href="#1-确认环境要求" class="headerlink" title="1. 确认环境要求"></a>1. 确认环境要求</h3><ul><li><p><strong>两个客户端</strong>：确保你有两个处于不同 NAT 或防火墙后的客户端设备，这两个客户端都需要能够访问到 FRP 服务器。</p></li><li><p><strong>一个服务器</strong>：一个可以被上述客户端访问的服务器，用来部署 FRP 服务端。这个服务器需要有固定的公网 IP 或域名。</p></li></ul><blockquote><p>这里我准备了一台内网服务器 <code>&#39; A &#39;</code>，两台公网服务器，含一台优质线路，低宽带低流量 <code>&#39; S &#39; </code>，一台高宽带高流量线路一般的服务器<code>&#39; D &#39;</code>）。实测基本能跑满加宽上行。）</p></blockquote><h3 id="2-安装-FRP"><a href="#2-安装-FRP" class="headerlink" title="2. 安装 FRP"></a>2. 安装 FRP</h3><blockquote><p>frps为服务端，frpc为客户端，安装方法请参考<a href="https://gofrp.org/zh-cn/docs/setup/">安装 | frp (gofrp.org)</a></p></blockquote><p>Docker compose安装示列,包含<code>frps</code>，<code>frpc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  frps:</span><br><span class="line">    image: snowdreamtech/frps</span><br><span class="line">    container_name: frps</span><br><span class="line">    network_mode: host</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data/frps.toml:/etc/frp/frps.toml</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  frpc:</span><br><span class="line">    image: snowdreamtech/frpc</span><br><span class="line">    container_name: frpc</span><br><span class="line">    network_mode: host</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data/frpc.toml:/etc/frp/frpc.toml</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><ul><li><strong>内网服务器</strong> <code>A</code><strong>安装frpc</strong></li><li><strong>公网服务器</strong><code>D</code><strong>安装frpc</strong></li><li><strong>公网服务器</strong><code>S</code><strong>安装frps</strong></li></ul><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h3><p><strong>这里以穿透内网群晖为例</strong><br>下文看不懂可以参考<a href="https://gofrp.org/zh-cn/docs/examples/xtcp/">点对点内网穿透 | frp (gofrp.org)</a></p><h4 id="1-群晖或任意内网设备安装好frpc后，这里称为-被访问者-A"><a href="#1-群晖或任意内网设备安装好frpc后，这里称为-被访问者-A" class="headerlink" title="1.群晖或任意内网设备安装好frpc后，这里称为 被访问者 A"></a>1.群晖或任意内网设备安装好<code>frpc</code>后，这里称为 <em><strong>被访问者</strong></em> A</h4><p>进入你的安装目录配置<code>.toml</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/frpc/data</span><br><span class="line">nano frpc.toml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">serverAddr = &quot;1.1.1.1&quot;#服务器 S 的IP地址</span><br><span class="line">serverPort = 7000#服务器 S 的frps端口号，一般为7000</span><br><span class="line">auth.token = &quot;123&quot;#密钥，可选</span><br><span class="line"></span><br><span class="line">[[proxies]]</span><br><span class="line">name = &quot;nas-xtcp#名称随意&quot;</span><br><span class="line">type = &quot;xtcp&quot;</span><br><span class="line">secretKey = &quot;123441&quot;#密钥随意</span><br><span class="line">localIP = &quot;192.168.88.2&quot;#群晖内网地址</span><br><span class="line">localPort = 5001#群晖内网端口</span><br></pre></td></tr></table></figure><p><code>ctrl+x</code> <code>y</code>保存.</p><h4 id="2-配置frps服务端-S"><a href="#2-配置frps服务端-S" class="headerlink" title="2.配置frps服务端 S"></a>2.配置<code>frps</code><em><strong>服务端</strong></em> S</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/frps/data#这里是你的安装路径</span><br><span class="line">nano frps.toml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bindPort = 7000</span><br><span class="line">auth.token = &quot;123&quot;密钥</span><br><span class="line"></span><br><span class="line">webServer.addr = &quot;0.0.0.0&quot;</span><br><span class="line">webServer.port = 7500#web面板端口</span><br><span class="line">webServer.user = &quot;admin&quot;web面板账号</span><br><span class="line">webServer.password = &quot;adMin&quot;web面板密码</span><br></pre></td></tr></table></figure><h4 id="3-配置frpc-访问者-D"><a href="#3-配置frpc-访问者-D" class="headerlink" title="3.配置frpc 访问者 D"></a>3.配置<code>frpc</code> <em><strong>访问者</strong></em> D</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/frpc/data</span><br><span class="line">nano frpc.toml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">serverAddr = &quot;1.1.1.1&quot;#服务器 S 的IP地址</span><br><span class="line">serverPort = 7000#服务器 S 的frps端口号</span><br><span class="line">auth.token = &quot;123&quot;#密钥</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[visitors]]</span><br><span class="line">name = &quot;p2p_nas_visitor&quot;#这里名字随意</span><br><span class="line">type = &quot;xtcp&quot;</span><br><span class="line"># 要访问的 P2P 代理的名称</span><br><span class="line">serverName = &quot;nas-xtcp&quot;#这里要与***被访问者名字***一致</span><br><span class="line">secretKey = &quot;123441&quot;#这里要与***被访问者密码***一致</span><br><span class="line"># 绑定本地端口以访问 SSH 服务</span><br><span class="line">bindAddr = &quot;127.0.0.1&quot;#你服务器的内网地址，可以不用修改</span><br><span class="line">bindPort = 15001#你服务器未使用的端口</span><br><span class="line"># 如果需要自动保持隧道打开，将其设置为 true</span><br><span class="line">keepTunnelOpen = true</span><br></pre></td></tr></table></figure><p>配置完成后重启下一服务器 <em><strong>s</strong></em> <em><strong>a</strong></em> <em><strong>d</strong></em></p><p>接下来使用<code>D</code>服务器的<strong>IP+15001</strong>就能访问内网群晖了。</p><p>反向代理简单示列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location ^~ / &#123;</span><br><span class="line">    proxy_pass https://127.0.0.1:15001; </span><br><span class="line">    proxy_set_header Host $host; </span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">    proxy_set_header REMOTE-HOST $remote_addr; </span><br><span class="line">    proxy_set_header Upgrade $http_upgrade; </span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;; </span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme; </span><br><span class="line">    proxy_http_version 1.1; </span><br><span class="line">    add_header X-Cache $upstream_cache_status; </span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age=31536000&quot;; </span><br><span class="line">    add_header Cache-Control no-cache; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下部署Hexo博客在Debian 服务器上的过程</title>
      <link href="/2024/03/08/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BHexo%E9%83%A8%E7%BD%B2%E7%9A%84%E8%BF%87%E7%A8%8B/"/>
      <url>/2024/03/08/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BHexo%E9%83%A8%E7%BD%B2%E7%9A%84%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="1-更新系统包"><a href="#1-更新系统包" class="headerlink" title="1. 更新系统包"></a>1. 更新系统包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update sudo apt upgrade -y</span><br></pre></td></tr></table></figure><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2. 安装Node.js"></a>2. 安装Node.js</h3><p>这里可以选择随意的版本如21.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h3 id="3-安装Git"><a href="#3-安装Git" class="headerlink" title="3. 安装Git"></a>3. 安装Git</h3><p>Git是管理Hexo博客源码的必需工具。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git -y</span><br></pre></td></tr></table></figure><h3 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h3><p>安装Hexo前，请确保已经安装了Node.js和npm。接下来，使用npm全局安装Hexo。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="5-设置Hexo项目"><a href="#5-设置Hexo项目" class="headerlink" title="5. 设置Hexo项目"></a>5. 设置Hexo项目</h3><p>首先，选择一个位置创建你的Hexo项目。然后，使用Hexo命令初始化博客。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/myblog</span><br><span class="line">cd ~/myblog</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="6-配置Hexo"><a href="#6-配置Hexo" class="headerlink" title="6. 配置Hexo"></a>6. 配置Hexo</h3><h4 id="1-编辑项目跟目录下的-config-yml文件来配置Hexo，例如更改主题、修改博客标题、描述等。"><a href="#1-编辑项目跟目录下的-config-yml文件来配置Hexo，例如更改主题、修改博客标题、描述等。" class="headerlink" title="1 编辑项目跟目录下的_config.yml文件来配置Hexo，例如更改主题、修改博客标题、描述等。"></a>1 编辑项目跟目录下的<code>_config.yml</code>文件来配置Hexo，例如更改主题、修改博客标题、描述等。</h4><ul><li><code>title</code>: 网站的标题，将显示在网站的标题栏和其他位置。</li><li><code>subtitle</code>: 网站的副标题，通常用于进一步描述网站的内容或主题。</li><li><code>description</code>: 对网站的简短描述，用于SEO和搜索引擎结果中显示。</li><li><code>keywords</code>: 网站的关键词，用于SEO和搜索引擎优化。</li><li><code>author</code>: 网站的作者或所有者的名称。</li><li><code>language</code>: 网站使用的语言，通常采用ISO 639-1标准的语言代码。</li><li><code>timezone</code>: 网站所在地区的时区，通常采用IANA时区数据库中的时区名称。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timezone: Asia/Shanghai #设置时区</span><br><span class="line">language: zh-CN  #设置语言</span><br></pre></td></tr></table></figure><h4 id="2-创建图片以及文件目录"><a href="#2-创建图片以及文件目录" class="headerlink" title="2 创建图片以及文件目录"></a>2 创建图片以及文件目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/myblog</span><br><span class="line">mkdir images &amp;&amp; mkdir images</span><br></pre></td></tr></table></figure><p>通常，Hexo中的图片可以放在<code>source</code>目录下的任何地方。您可以在<code>source</code>目录下创建一个<code>images</code>文件夹，然后将您的图片放在其中。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">source/</span><br><span class="line">└── images/</span><br><span class="line">    ├── image1.jpg</span><br><span class="line">    ├── image2.png</span><br><span class="line">    └── ...</span><br></pre></td></tr></table></figure><p>一旦您将图片放在了<code>source/images</code>目录下，Hexo会自动将其复制到生成的静态网站中的相应位置。您可以在文章或页面中使用相对路径引用这些图片。例如，如果您有一篇文章位于<code>source/_posts</code>目录下，您可以在文章中这样引用图片：</p><p><code>![图片描述](../images/image1.jpg)</code></p><p>这将在文章中插入名为<code>image1.jpg</code>的图片，并将其路径设置为相对于文章所在位置的路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">source/</span><br><span class="line">└── files/</span><br><span class="line">    ├── file1.pdf</span><br><span class="line">    ├── file2.zip</span><br><span class="line">    └── ...</span><br></pre></td></tr></table></figure><p><code>[文件链接描述](../files/file1.pdf)</code></p><h4 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3 .安装插件"></a>3 .安装插件</h4><p><a href="https://github.com/wzpan/hexo-generator-search">全局搜索</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>根目录配置文件<code>_config.yml</code>（非主题配置文件）下添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">content: true</span><br></pre></td></tr></table></figure><p>站点地图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>根目录配置文件<code>_config.yml</code>（非主题配置文件）下添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><p><code>http://localhost:4000/sitemap.xml</code></p><h3 id="7-生成站点并预览"><a href="#7-生成站点并预览" class="headerlink" title="7. 生成站点并预览"></a>7. 生成站点并预览</h3><p>在你的Hexo项目目录中，运行以下命令来生成静态文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>然后，启动Hexo服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>默认情况下，这将在<code>http://localhost:4000</code>启动一个本地服务器。由于这是在远程服务器上，你可能需要通过一个具体的IP地址或域名访问它，确保你的防火墙和网络设置允许从外部访问4000端口。</p><h3 id="8-安装主题"><a href="#8-安装主题" class="headerlink" title="8.安装主题"></a>8.安装主题</h3><blockquote><p>这里以<a href="https://github.com/zchengsite/hexo-theme-oranges/blob/master/README-zh.md">orange</a>为列</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/zchengsite/hexo-theme-oranges.git themes/oranges</span><br></pre></td></tr></table></figure><p>在 hexo 博客项目根目录下找到<code>_config.yml</code>文件，修改其中<code>theme</code>字段为主题名<code>oranges</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: oranges</span><br></pre></td></tr></table></figure><p>统计JS目录<code>~/myblog/themes/oranges/layout/_partial/footer.ejs</code><br><strong>更多设置</strong>请参考 <a href="https://github.com/zchengsite/hexo-theme-oranges/blob/master/README-zh.md">OrangeREADME.md</a> </p><h3 id="9-发布文章"><a href="#9-发布文章" class="headerlink" title="9.发布文章"></a>9.发布文章</h3><p><strong>创建新文章</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>或者直接准备好的md文件放入<code>cd ~/myblog/source/_posts</code>中</p><p><strong>添加元数据</strong>（Front-matter）：文章顶部的元数据区域允许您指定关于文章的信息，例如标题、日期、分类和标签。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2024-03-07 20:00:00</span><br><span class="line">categories: 分类</span><br><span class="line">tags:</span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">---</span><br><span class="line">....文章正文</span><br></pre></td></tr></table></figure><p>上线文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</span><br></pre></td></tr></table></figure><h3 id="10-使用PM2来管理Hexo服务器的后台运行"><a href="#10-使用PM2来管理Hexo服务器的后台运行" class="headerlink" title="10 使用PM2来管理Hexo服务器的后台运行"></a>10 使用PM2来管理Hexo服务器的后台运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><p><strong>创建一个<code>js</code>脚本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">const &#123; exec &#125; = require(&#x27;child_process&#x27;);</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">// 设置Hexo的根目录</span><br><span class="line"></span><br><span class="line">const hexoRoot = &#x27;~/myblog&#x27;;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">// 执行 Hexo 相关命令</span><br><span class="line"></span><br><span class="line">const executeHexoCommands = () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">exec(`cd $&#123;hexoRoot&#125; &amp;&amp; hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server`, (error, stdout, stderr) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">if (error) &#123;</span><br><span class="line"></span><br><span class="line">reject(`执行出错: $&#123;error&#125;`);</span><br><span class="line"></span><br><span class="line">return;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(`stdout: $&#123;stdout&#125;`);</span><br><span class="line"></span><br><span class="line">console.error(`stderr: $&#123;stderr&#125;`);</span><br><span class="line"></span><br><span class="line">resolve();</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">// 启动Hexo服务器</span><br><span class="line"></span><br><span class="line">const startHexoServer = async () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line"></span><br><span class="line">await executeHexoCommands();</span><br><span class="line"></span><br><span class="line">console.log(&#x27;Hexo服务器已启动！&#x27;);</span><br><span class="line"></span><br><span class="line">&#125; catch (err) &#123;</span><br><span class="line"></span><br><span class="line">console.error(err);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">// 执行脚本</span><br><span class="line"></span><br><span class="line">startHexoServer();</span><br></pre></td></tr></table></figure><p>然后，在Hexo博客的根目录下，使用以下命令启动您的<code>.js</code>脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start run.js --name &quot;hexo-script&quot;</span><br></pre></td></tr></table></figure><p>这将使用PM2启动您的脚本，并将其命名为”hexo-script”（可以选择其他名称）</p><p>之后启动可以使用该命令启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start hexo-script#启动</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 stop hexo-script#停止</span><br></pre></td></tr></table></figure><p>在系统启动时自动启动这个脚本，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 startup</span><br></pre></td></tr></table></figure><p>按照命令行中给出的指示，执行相应的命令，以便PM2能够在系统启动时自动启动。</p><p>通过这样设置，您的Hexo博客将由PM2管理，您可以轻松地运行您的脚本并确保它在系统重启后自动启动</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>简单粗暴的给你FPR服务限制地区访问，其他同理</title>
      <link href="/2024/02/07/%E7%AE%80%E5%8D%95%E7%B2%97%E6%9A%B4%E7%9A%84%E7%BB%99%E4%BD%A0FPR%E6%9C%8D%E5%8A%A1%E9%99%90%E5%88%B6%E5%9C%B0%E5%8C%BA%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%85%B6%E4%BB%96%E5%90%8C%E7%90%86/"/>
      <url>/2024/02/07/%E7%AE%80%E5%8D%95%E7%B2%97%E6%9A%B4%E7%9A%84%E7%BB%99%E4%BD%A0FPR%E6%9C%8D%E5%8A%A1%E9%99%90%E5%88%B6%E5%9C%B0%E5%8C%BA%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%85%B6%E4%BB%96%E5%90%8C%E7%90%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">FRP 容器名称</span></span><br><span class="line">CONTAINER_NAME=&quot;frps&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ipinfo.io 的 API 令牌</span></span><br><span class="line">IPINFO_TOKEN=&quot;你的令牌。每个月能免费使用50K额度，基本够了&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">目标地区</span></span><br><span class="line">TARGET_REGION=&quot;Sichuan&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">缓存文件路径</span></span><br><span class="line">CACHE_FILE=&quot;/opt/banIP/ip_region_cache.txt&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">函数：检查 IP 是否为特殊或保留地址</span></span><br><span class="line">is_special_ip() &#123;</span><br><span class="line">    local ip=$1</span><br><span class="line">    if [[ $ip =~ ^(0\.|127\.|10\.|192\.168\.|172\.(1[6-9]|2[0-9]|3[0-1])\.|169\.254\.|::1|fc00::|fe80::) ]]; then</span><br><span class="line">        return 0</span><br><span class="line">    else</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">函数：从缓存获取 IP 地区</span></span><br><span class="line">get_region_from_cache() &#123;</span><br><span class="line">    local ip=$1</span><br><span class="line">    grep &quot;^$ip,&quot; $CACHE_FILE | cut -d &#x27;,&#x27; -f2</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">函数：将 IP 地区保存到缓存</span></span><br><span class="line">save_region_to_cache() &#123;</span><br><span class="line">    local ip=$1</span><br><span class="line">    local region=$2</span><br><span class="line">    echo &quot;$ip,$region&quot; &gt;&gt; $CACHE_FILE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">docker logs &quot;$CONTAINER_NAME&quot; 2&gt;&amp;1 | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; | sort -u | while read -r ip; do</span><br><span class="line">    if is_special_ip &quot;$ip&quot;; then</span><br><span class="line">        echo &quot;Skipping special or reserved IP: $ip&quot;</span><br><span class="line">        continue</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    # 尝试从缓存获取地区</span><br><span class="line">    region=$(get_region_from_cache &quot;$ip&quot;)</span><br><span class="line">    if [ -z &quot;$region&quot; ]; then</span><br><span class="line">        # 缓存中没有找到，使用API查询</span><br><span class="line">        region=$(curl -s &quot;https://ipinfo.io/$&#123;ip&#125;/region?token=$IPINFO_TOKEN&quot;)</span><br><span class="line">        save_region_to_cache &quot;$ip&quot; &quot;$region&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo &quot;IP: $ip, Region: $region&quot;</span><br><span class="line"></span><br><span class="line">    if [[ &quot;$region&quot; != *&quot;$TARGET_REGION&quot;* ]]; then</span><br><span class="line">        echo &quot;Blocking IP: $ip, as it is not in $TARGET_REGION&quot;</span><br><span class="line">        # 使用 ufw 屏蔽该 IP</span><br><span class="line">        ufw deny from &quot;$ip&quot; to any</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="步骤-1-创建脚本文件"><a href="#步骤-1-创建脚本文件" class="headerlink" title="步骤 1: 创建脚本文件"></a><strong>步骤 1: 创建脚本文件</strong></h2><p>首先，首先创建一个 <code>/opt/banIP</code> 目录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/banIP</span><br></pre></td></tr></table></figure><p>然后，创建脚本文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /opt/banIP/block_non_sichuan_ips.sh</span><br></pre></td></tr></table></figure><p>将之前提供的脚本内容粘贴进去，确保替换了 为你的实际 ipinfo.io API 令牌。保存并退出编辑器。</p><p>再创建一个缓存目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /opt/banIP/ip_region_cache.txt</span><br></pre></td></tr></table></figure><p>如果你自定义了目录请注意脚本的中目录是否一致</p><h2 id="步骤2设置一个定时运行"><a href="#步骤2设置一个定时运行" class="headerlink" title="步骤2设置一个定时运行"></a>步骤2设置一个定时运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /opt/banIP/block_non_sichuan_ips.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 * * * * /opt/banIP/block_non_sichuan_ips.sh &gt;&gt; /opt/banIP/block_ips.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><ol><li><p>这条 <code>crontab</code> 配置的意思是：</p><ul><li><p><code>0</code> 分钟时执行，即每个小时的开始。</p></li><li><p><code>* * * *</code> 表示每小时、每天、每月、每周的任何时间。</p></li><li><p><code>/opt/banIP/block_non_sichuan_ips.sh</code> 指定脚本的路径。</p></li><li><p><code>&gt;&gt; /opt/banIP/block_ips.log 2&gt;&amp;1</code> 意味着将标准输出和错误输出都重定向到日志文件。</p></li></ul></li><li><p><strong>保存并退出编辑器</strong>： 保存更改并退出编辑器。<code>crontab</code> 服务会自动加载这个新的定时任务。</p></li></ol><p>注意脚本创建成功后自己执行一次，看是否成功</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Windows上解锁被锁定的Jellyfin用户账户及恢复管理员权限</title>
      <link href="/2024/02/04/%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%8A%E8%A7%A3%E9%94%81%E8%A2%AB%E9%94%81%E5%AE%9A%E7%9A%84Jellyfin%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E5%8F%8A%E6%81%A2%E5%A4%8D%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/"/>
      <url>/2024/02/04/%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%8A%E8%A7%A3%E9%94%81%E8%A2%AB%E9%94%81%E5%AE%9A%E7%9A%84Jellyfin%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E5%8F%8A%E6%81%A2%E5%A4%8D%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h1 id="如何在Windows上解锁被锁定的Jellyfin用户账户及恢复管理员权限"><a href="#如何在Windows上解锁被锁定的Jellyfin用户账户及恢复管理员权限" class="headerlink" title="如何在Windows上解锁被锁定的Jellyfin用户账户及恢复管理员权限"></a>如何在Windows上解锁被锁定的Jellyfin用户账户及恢复管理员权限</h1><p>如果您无法访问Jellyfin的管理员账户，或者需要修复管理员用户权限，本指南将指导您如何使用SQLite手动解锁账户并更改权限。</p><h2 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h2><ul><li>确保您的Windows系统已经安装了<code>sqlite3</code>。如果没有，请下载SQLite二进制文件，并将其放在如<code>C:\\sqlite3\\</code>的目录下。</li></ul><h2 id="解锁用户账户的步骤"><a href="#解锁用户账户的步骤" class="headerlink" title="解锁用户账户的步骤"></a>解锁用户账户的步骤</h2><p>要解锁用户名为<code>123</code>的用户账户，请按照以下步骤操作：</p><ol><li><p>打开命令提示符（CMD）。</p></li><li><p>导航至包含Jellyfin数据库的目录：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\\ProgramData\\Jellyfin\\Server\\data</span><br></pre></td></tr></table></figure><ol start="3"><li>使用位于<code>C:\\sqlite3</code>的SQLite3工具打开数据库：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\\sqlite3\\sqlite3.exe jellyfin.db</span><br></pre></td></tr></table></figure><ol start="4"><li>在SQLite命令行中，执行以下SQL查询解锁<code>123</code>账户：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> Users <span class="keyword">SET</span> InvalidLoginAttemptCount <span class="operator">=</span> <span class="number">0</span> <span class="keyword">WHERE</span> Username <span class="operator">=</span> <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> Permissions <span class="keyword">SET</span> <span class="keyword">Value</span> <span class="operator">=</span> <span class="number">0</span> <span class="keyword">WHERE</span> Kind <span class="operator">=</span> <span class="number">2</span> <span class="keyword">AND</span> UserId <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Id <span class="keyword">FROM</span> Users <span class="keyword">WHERE</span> Username <span class="operator">=</span> <span class="string">&#x27;123&#x27;</span>);</span><br><span class="line">.exit</span><br></pre></td></tr></table></figure><p>这将重置用户<code>123</code>的无效登录尝试计数，并解锁账户。</p><h2 id="修复管理员用户权限"><a href="#修复管理员用户权限" class="headerlink" title="修复管理员用户权限"></a>修复管理员用户权限</h2><p>如果您还需要修复管理员用户权限，请按以下步骤操作：</p><ol><li><p>如上所述打开SQLite数据库。</p></li><li><p>执行适当的SQL查询来修复权限。确切的查询将取决于需要修复的特定权限。</p></li></ol><h2 id="重要提醒"><a href="#重要提醒" class="headerlink" title="重要提醒"></a>重要提醒</h2><p>在执行任何SQL查询之前，确保您已备份数据库以防不可逆的损坏。您可以使用以下命令创建备份：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy jellyfin.db jellyfin_backup.db</span><br></pre></td></tr></table></figure><h2 id="备份将作为在手动更新过程中可能出现的任何意外问题的安全防护措施。"><a href="#备份将作为在手动更新过程中可能出现的任何意外问题的安全防护措施。" class="headerlink" title="备份将作为在手动更新过程中可能出现的任何意外问题的安全防护措施。"></a>备份将作为在手动更新过程中可能出现的任何意外问题的安全防护措施。</h2>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jellyfin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下Nginx Proxy Manager设置负载均衡的方法</title>
      <link href="/2024/01/26/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BNginx-Proxy-Manager%E8%AE%BE%E7%BD%AE%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2024/01/26/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8BNginx-Proxy-Manager%E8%AE%BE%E7%BD%AE%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>docker安装好NPM后，<br>进入安装目录&#x2F;npm&#x2F;date&#x2F;nginx<br>创建<code>custom/http.conf</code><br>如<code>/opt/docker/npm/data/nginx/custom/http.conf</code></p><p><code>http.conf</code>配置范本如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">upstream 2fa &#123;</span><br><span class="line">    server 你的服务器IP:应用端口;</span><br><span class="line">    server 1.1.1.1:120;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream jellyfin &#123;</span><br><span class="line">    server 2.2.2.2:18096;</span><br><span class="line">    server 3.3.3.3:18096;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream pcisur &#123;</span><br><span class="line">    server 4.4.4.4:28003;</span><br><span class="line">    server 5.5.5.5:28003;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream song &#123;</span><br><span class="line">    server 6.6.6.6:14533;</span><br><span class="line">    server 7.7.7.7:14533;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上2fa,jellyfin….为应用名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream 2fa &#123;</span><br><span class="line">    server 149.104.22.155:18120 weight=3;</span><br><span class="line">    server 103.30.77.177:18120 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方式是给服务器配置权重，这种配置在某种程度上可以作为优先级的代理：具有更高权重的服务器会处理更多的请求。但请注意，这并不保证第一个服务器总是被优先选择。当第一个服务器忙碌或达到其负载容量时，新的请求仍然可能被路由到权重较低的服务器</p><p>接下来进入NPM后台</p><p><img src="https://cloudflare.free-img.ososo.org/file/1732423594241_%E6%88%AA%E5%9B%BE%202024-01-26%2016-22-08.png" alt="截图 2024-01-26 16-22-08.png"></p><p>如图所示填写你的域名，服务器IP，<strong>端口号HTTP都填写80,HTTPS都填写443</strong></p><p>点击高级设置</p><p><img src="https://cloudflare.free-img.ososo.org/file/1732423690347_%E6%88%AA%E5%9B%BE%202024-01-26%2016-25-37.png" alt="截图 2024-01-26 16-25-37.png"></p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://2fa;#2fa为你刚才编辑的http.conf里面的应用民称</span><br><span class="line">    # 80端口用http://2fa;443端口用https://2fa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://2fa;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后就设置成功了</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
          <category> 负载均衡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Nginx Proxy Manager </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始，ALL-IN-ONE ，GPT使用从未如此简单</title>
      <link href="/2023/12/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8CALL-IN-ONE%20%EF%BC%8CGPT%E4%BD%BF%E7%94%A8%E4%BB%8E%E6%9C%AA%E5%A6%82%E6%AD%A4%E7%AE%80%E5%8D%95/"/>
      <url>/2023/12/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%EF%BC%8CALL-IN-ONE%20%EF%BC%8CGPT%E4%BD%BF%E7%94%A8%E4%BB%8E%E6%9C%AA%E5%A6%82%E6%AD%A4%E7%AE%80%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>太过远古，本教程考古把</th></tr></thead></table><blockquote><p>部署环境：<br>系统：debian11<br> 一个半年以上的GitHub账号</p></blockquote><p>本文涉及4个开源项目：</p><blockquote><p>NPM:<a href="https://github.com/NginxProxyManager/nginx-proxy-manager">NginxProxyManager&#x2F;nginx-proxy-manager</a><br>pandora-next:<a href="https://github.com/pandora-next/deploy">pandora-next&#x2F;deploy</a><br>PandoraNext-TokensTool:<a href="https://github.com/Yanyutin753/PandoraNext-TokensTool">Yanyutin753&#x2F;PandoraNext-TokensTool</a><br>ChatGPT-Next-Web:<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">Yidadaa&#x2F;ChatGPT-Next-Web</a></p></blockquote><p>如果觉得好用的话，请关注，star一下这些爱发电的作者！！！</p><h3 id="1：先更新一下系统"><a href="#1：先更新一下系统" class="headerlink" title="1：先更新一下系统"></a>1：先更新一下系统</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt update &amp;&amp; apt upgrade -y</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2：安装docker"><a href="#2：安装docker" class="headerlink" title="2：安装docker"></a>2：安装docker</h3><h4 id="①：提供四个安装脚本"><a href="#①：提供四个安装脚本" class="headerlink" title="①：提供四个安装脚本"></a>①：提供四个安装脚本</h4><ul><li>官方：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><ul><li>DaoCloud 的安装脚本（推荐）:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><ul><li>阿里云的安装脚本:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</span><br></pre></td></tr></table></figure><ul><li>推荐使用:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/DockerInstallation.sh)</span><br></pre></td></tr></table></figure><p>验证一下docker安装是否成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><h4 id="②：安装-Docker-Compose"><a href="#②：安装-Docker-Compose" class="headerlink" title="②：安装 Docker Compose"></a>②：安装 Docker Compose</h4><p>请确保你的端口没有被占用<br>在 GitHub 上获取最新版本的 Docker Compose：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>赋予执行权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>如果需要使用非 sudo 用户执行 Docker Compose 命令，可以将该用户添加到 docker 组中。</p><p>验证安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="3：创建安装目录"><a href="#3：创建安装目录" class="headerlink" title="3：创建安装目录"></a>3：创建安装目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/docker/chat</span><br></pre></td></tr></table></figure><p>拉取config文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /opt/docker/chat/data/config.json https://raw.githubusercontent.com/pandora-next/deploy/master/data/config.json</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;bind&quot;: &quot;0.0.0.0:8181&quot;,</span><br><span class="line">  &quot;tls&quot;: &#123;</span><br><span class="line">    &quot;enabled&quot;: false,</span><br><span class="line">    &quot;cert_file&quot;: &quot;&quot;,</span><br><span class="line">    &quot;key_file&quot;: &quot;&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;timeout&quot;: 600,</span><br><span class="line">  &quot;proxy_url&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license_id&quot;: &quot;&quot;,  # 一定要填写，获取地址：https://dash.pandoranext.com/</span><br><span class="line">  &quot;public_share&quot;: false,</span><br><span class="line">  &quot;site_password&quot;: &quot;&quot;,</span><br><span class="line">  &quot;setup_password&quot;: &quot;&quot;,</span><br><span class="line">  &quot;server_tokens&quot;: true,</span><br><span class="line">  &quot;proxy_api_prefix&quot;: &quot;&quot;,</span><br><span class="line">  &quot;isolated_conv_title&quot;: &quot;*&quot;,</span><br><span class="line">  &quot;whitelist&quot;: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>license_id获取地址<a href="https://dash.pandoranext.com/">https://dash.pandoranext.com/</a></p><p>如果提示错误,安装一下 wget 和 curl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install wget &amp;&amp; sudo apt install curl</span><br></pre></td></tr></table></figure><h3 id="4：-创建docker-compose-yml文件"><a href="#4：-创建docker-compose-yml文件" class="headerlink" title="4： 创建docker-compose.yml文件"></a>4： 创建docker-compose.yml文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  pandora-next:</span><br><span class="line">    image: pengzhile/pandora-next</span><br><span class="line">    container_name: PandoraNext</span><br><span class="line">    network_mode: bridge</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8181:8181&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data</span><br><span class="line">      - ./sessions:/root/.cache/PandoraNext</span><br><span class="line"></span><br><span class="line">  tokensTool:</span><br><span class="line">    image: yangclivia/tokenstool:latest</span><br><span class="line">    container_name: tokensTool</span><br><span class="line">    restart: always</span><br><span class="line">    user: root</span><br><span class="line">    network_mode: host</span><br><span class="line">    pid: host</span><br><span class="line">    privileged: true</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    command:</span><br><span class="line">      - --deployWay=(部署方式看环境变量)</span><br><span class="line">      - --deployPosition=/data</span><br><span class="line">      - --hotReload=true</span><br><span class="line">      - --server.port=8081</span><br><span class="line">      - --pandoara_Ip=127.0.0.1</span><br><span class="line"></span><br><span class="line">  chatgpt-next-web:</span><br><span class="line">    image: yidadaa/chatgpt-next-web</span><br><span class="line">    container_name: ChatGPTNextWeb</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8090:3000&quot;</span><br><span class="line">    environment:</span><br><span class="line">      - OPENAI_API_KEY=sk-xxxx  # 填写你的 API KEY</span><br><span class="line">      - CODE=your-password      # 设置访问密码，防止 API Key 被滥用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8081#可以先检测一下端口是否被占用 lsof -i:端口号</span><br></pre></td></tr></table></figure><p>按住键盘<code>Ctrl+x</code> ，输入Y保存</p><h4 id="docker-compose-up-d启动容器，"><a href="#docker-compose-up-d启动容器，" class="headerlink" title="docker compose up -d启动容器，"></a><code>docker compose up -d</code>启动容器，</h4><h3 id="如果你不使用-Chat2API，请跳过这一步。"><a href="#如果你不使用-Chat2API，请跳过这一步。" class="headerlink" title="如果你不使用 Chat2API，请跳过这一步。"></a>如果你不使用 Chat2API，请跳过这一步。</h3><p>首先访问tokensTool：输入你的服务器<code>IP:8081</code>进入后台</p><p>默认账号为：<code>root</code>，密码为<code>123456</code>，</p><p>如果提示错误请检查<code>cat /opt/docker/chat/data/config.json</code>文件内是否有内容，如果没有请创建 <code>nano /opt/docker/chat/data/config.json</code> ,复制上面的config配置</p><p>进入tokensTool请修改默认账号密码，图上面很详细了，不懂请反复观看<br><img src="https://cloudflare.free-img.ososo.org/file/1732426247269_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20040347.png" alt="输入图片说明"><br>点击+号添加你的openai账号,示列如图<br><img src="https://cloudflare.free-img.ososo.org/file/1732426237386_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20040752.png" alt="输入图片说明"></p><p>这里获取一次token占用100 license_id 额度</p><blockquote><p>这个容器能实现openai账号密码获取pool_token、share_token和access_token</p></blockquote><h3 id="5：-接下来我们输入ip-8181访问Pandora，如果配置了访问密码。请输入你的密码！！！"><a href="#5：-接下来我们输入ip-8181访问Pandora，如果配置了访问密码。请输入你的密码！！！" class="headerlink" title="5： 接下来我们输入ip:8181访问Pandora，如果配置了访问密码。请输入你的密码！！！"></a>5： 接下来我们输入<code>ip:8181</code>访问Pandora，如果配置了访问密码。请输入你的密码！！！</h3><p><img src="https://cloudflare.free-img.ososo.org/file/1732426235930_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20041243.png" alt="输入图片说明"><br>到了这一步，如果你还没有openai账号可以点击页面<code>Sign up</code>注册你的open账号，最好用Google或微软邮箱，</p><p>获取到的验证链接不要点进去！！！！直接右键复制链接<br><img src="https://cloudflare.free-img.ososo.org/file/1732426242218_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20041648.png" alt="输入图片说明"><br>这样你就免代理获得了一个openai账号<br><img src="https://cloudflare.free-img.ososo.org/file/1732426244897_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20041931.png" alt="输入图片说明"></p><h3 id="6：下面讲一下ChatGPT-Next-Web的设置"><a href="#6：下面讲一下ChatGPT-Next-Web的设置" class="headerlink" title="6：下面讲一下ChatGPT-Next-Web的设置"></a>6：下面讲一下ChatGPT-Next-Web的设置</h3><p>输入<code>ip:8090</code>进入ChatGPT-Next-Web</p><p>如果提示输入 密码跟 token 随便输一下，可以不用管他</p><p>接下来点击左下角设置图标如图设置<br><img src="https://cloudflare.free-img.ososo.org/file/1732426247275_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20042447.png" alt="输入图片说明"><br><img src="https://cloudflare.free-img.ososo.org/file/1732426239546_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-12%20042731.png" alt="输入图片说明"><br>配置完成后就能跟Openai畅聊了</p><p><strong>！！！注意这个一个聊天占用4个license_id 额度，如果额度紧张的话就只用Pandora网页即可。一个指令，占用1个额度。</strong></p><h3 id="如果你还想使用域名访问，可以docker安装NPM"><a href="#如果你还想使用域名访问，可以docker安装NPM" class="headerlink" title="如果你还想使用域名访问，可以docker安装NPM"></a>如果你还想使用域名访问，可以docker安装NPM</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/docker/npm</span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">app:</span><br><span class="line">image: &#x27;jc21/nginx-proxy-manager:latest&#x27;</span><br><span class="line">restart: unless-stopped</span><br><span class="line">ports:</span><br><span class="line">- &#x27;80:80&#x27; # 冒号左边可以改成自己服务器未被占用的端口</span><br><span class="line">- &#x27;81:81&#x27; # 冒号左边可以改成自己服务器未被占用的端口</span><br><span class="line">- &#x27;443:443&#x27; # 冒号左边可以改成自己服务器未被占用的端口</span><br><span class="line">volumes:</span><br><span class="line">- ./data:/data # 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span><br><span class="line">- ./letsencrypt:/etc/letsencrypt # 冒号左边可以改路径，现在是表示把数据存</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><p><strong>请确保你的端口没有被占用</strong></p><p>输入你的<code>ip:81</code>访问npm后台</p><p>默认账号密码</p><p><code>Email: admin@example.com Password: changeme</code></p><p>进入后台后请及时修改账号，密码。其他设置还不懂请自行百度，或者问GPT。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源AI人脸替换工具离线版V3.0 整合包</title>
      <link href="/2023/10/30/%E5%BC%80%E6%BA%90AI%E4%BA%BA%E8%84%B8%E6%9B%BF%E6%8D%A2%E5%B7%A5%E5%85%B7%E7%A6%BB%E7%BA%BF%E7%89%88V3.0%20%E6%95%B4%E5%90%88%E5%8C%85/"/>
      <url>/2023/10/30/%E5%BC%80%E6%BA%90AI%E4%BA%BA%E8%84%B8%E6%9B%BF%E6%8D%A2%E5%B7%A5%E5%85%B7%E7%A6%BB%E7%BA%BF%E7%89%88V3.0%20%E6%95%B4%E5%90%88%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cloudflare.free-img.ososo.org/file/1732424036332_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-30%20155833.png" alt="屏幕截图 2023-10-30 155833.png"></p><p><img src="https://cloudflare.free-img.ososo.org/file/1732424040558_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-30%20195951.png" alt="屏幕截图 2023-10-30 195951.png"><br>无需配置任何环境，解压后即可使用，只需一张人脸图片，就可以把视频中的人脸换成你需要人物。无任何使用门槛，支持CPU和GPU解码！</p><p><img src="https://cloudflare.free-img.ososo.org/file/1732424157095_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-10-30%20200005.png" alt="屏幕截图 2023-10-30 200005.png"><br>开源项目：【<a href="https://github.com/s0md3v/roop">GitHub</a>】</p><p>软件作者：<a href="https://space.bilibili.com/4228235">https://space.bilibili.com/4228235</a></p><p>下载地址：</p><p>迅雷云盘：<a href="https://pan.xunlei.com/s/VNhzaKoCNgvPBXPcP0_GmFdZA1">https://pan.xunlei.com/s/VNhzaKoCNgvPBXPcP0_GmFdZA1</a></p><p>提取码：<code>rz8k</code></p>]]></content>
      
      
      <categories>
          
          <category> ai </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中年生活的信息终结者：Docker 部署 RSS服务重塑信息典雅</title>
      <link href="/2023/10/17/%E4%B8%AD%E5%B9%B4%E7%94%9F%E6%B4%BB%E7%9A%84%E4%BF%A1%E6%81%AF%E7%BB%88%E7%BB%93%E8%80%85%EF%BC%9ADocker%20%E9%83%A8%E7%BD%B2%20RSS%E6%9C%8D%E5%8A%A1%E9%87%8D%E5%A1%91%E4%BF%A1%E6%81%AF%E5%85%B8%E9%9B%85/"/>
      <url>/2023/10/17/%E4%B8%AD%E5%B9%B4%E7%94%9F%E6%B4%BB%E7%9A%84%E4%BF%A1%E6%81%AF%E7%BB%88%E7%BB%93%E8%80%85%EF%BC%9ADocker%20%E9%83%A8%E7%BD%B2%20RSS%E6%9C%8D%E5%8A%A1%E9%87%8D%E5%A1%91%E4%BF%A1%E6%81%AF%E5%85%B8%E9%9B%85/</url>
      
        <content type="html"><![CDATA[<p>信息自由航行：中年人的 RSS服务器 Docker 部署指南</p><blockquote><p>在当今信息爆炸的时代，我们中年人常常陷入信息过载的困境。社交媒体、新闻网站、博客和论坛，无处不在的信息源涌入我们的生活。然而，与此同时，我们也面临着信息过载的问题，很难从这海量信息中筛选出真正有价值的内容。这就是通常被戏称为“信息阳痿”的困扰。</p><p>幸运的是，自托管RSS阅读器，可以帮助我们解决这个问题。而且，通过使用Docker容器化技术，我们能够轻松地部署和管理RSS，为中年人的信息管理提供了全新的解决方案。</p></blockquote><h1 id="TinyTinyRSS-FreshRSS简介"><a href="#TinyTinyRSS-FreshRSS简介" class="headerlink" title="TinyTinyRSS&amp;&amp;FreshRSS简介"></a>TinyTinyRSS&amp;&amp;FreshRSS简介</h1><h1 id=""><a href="#" class="headerlink" title=""></a></h1><blockquote><p><a href="https://tt-rss.org/">TinyTinyRSS</a>&amp;&amp;<a href="https://freshrss.org/">FreshRSS</a>是一个开源的自托管RSS阅读器，它可以帮助你订阅你喜爱的博客、新闻网站和其他信息源。与传统的社交媒体不同，RSS阅读器让你完全掌握信息源，避免了算法过滤和信息泛滥。你可以根据自己的兴趣订阅各种源，将信息集中在一个平台上进行阅读。</p></blockquote><p><img src="https://cloudflare.free-img.ososo.org/file/1732424248250_image-ahtz.png" alt="image-ahtz.png"></p><p><img src="https://cloudflare.free-img.ososo.org/file/1732424249234_image-znda.png" alt="image-znda.png"></p><h2 id="ttrss部署"><a href="#ttrss部署" class="headerlink" title="ttrss部署"></a>ttrss部署</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/docker/ttrss</span><br><span class="line">cd /opt/docker/ttrss</span><br><span class="line">nano docker-compose.yml</span><br><span class="line"></span><br><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  service.rss:</span><br><span class="line">    image: wangqiru/ttrss:latest</span><br><span class="line">    container_name: ttrss</span><br><span class="line">    ports:</span><br><span class="line">      - 181:80</span><br><span class="line">    environment:</span><br><span class="line">      - SELF_URL_PATH=http://localhost:181/ # please change to your own domain</span><br><span class="line">      - DB_PASS=ttrss # use the same password defined in database.postgres</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">    volumes:</span><br><span class="line">      - feed-icons:/var/www/feed-icons/</span><br><span class="line">    networks:</span><br><span class="line">      - public_access</span><br><span class="line">      - service_only</span><br><span class="line">      - database_only</span><br><span class="line">    stdin_open: true</span><br><span class="line">    tty: true</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  service.mercury: # set Mercury Parser API endpoint to service.mercury:3000 on TTRSS plugin setting page</span><br><span class="line">    image: wangqiru/mercury-parser-api:latest</span><br><span class="line">    container_name: mercury</span><br><span class="line">    networks:</span><br><span class="line">      - public_access</span><br><span class="line">      - service_only</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  service.opencc: # set OpenCC API endpoint to service.opencc:3000 on TTRSS plugin setting page</span><br><span class="line">    image: wangqiru/opencc-api-server:latest</span><br><span class="line">    container_name: opencc</span><br><span class="line">    environment:</span><br><span class="line">      - NODE_ENV=production</span><br><span class="line">    networks:</span><br><span class="line">      - service_only</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  database.postgres:</span><br><span class="line">    image: postgres:13-alpine</span><br><span class="line">    container_name: postgres</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_PASSWORD=ttrss # feel free to change the password</span><br><span class="line">    volumes:</span><br><span class="line">      - ~/postgres/data/:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host</span><br><span class="line">    networks:</span><br><span class="line">      - database_only</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  # utility.watchtower:</span><br><span class="line">  #   container_name: watchtower</span><br><span class="line">  #   image: containrrr/watchtower:latest</span><br><span class="line">  #   volumes:</span><br><span class="line">  #     - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">  #   environment:</span><br><span class="line">  #     - WATCHTOWER_CLEANUP=true</span><br><span class="line">  #     - WATCHTOWER_POLL_INTERVAL=86400</span><br><span class="line">  #   restart: always</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  feed-icons:</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  public_access: # Provide the access for ttrss UI</span><br><span class="line">  service_only: # Provide the communication network between services only</span><br><span class="line">    internal: true</span><br><span class="line">  database_only: # Provide the communication between ttrss and database only</span><br><span class="line">    internal: true</span><br></pre></td></tr></table></figure><p>ctrl+x 保存</p><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h2 id="FreshRSS部署"><a href="#FreshRSS部署" class="headerlink" title="FreshRSS部署"></a>FreshRSS部署</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/docke/frss</span><br><span class="line">cd /opt/docker/ttrss</span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  freshrss-db:</span><br><span class="line">    image: postgres:latest</span><br><span class="line">    container_name: freshrss-db</span><br><span class="line">    hostname: freshrss-db</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    volumes:</span><br><span class="line">      - freshrss-db:/var/lib/postgresql/data</span><br><span class="line">    environment:</span><br><span class="line">      POSTGRES_USER: freshrss</span><br><span class="line">      POSTGRES_PASSWORD: freshrss</span><br><span class="line">      POSTGRES_DB: freshrss</span><br><span class="line"></span><br><span class="line">  freshrss-app:</span><br><span class="line">    image: freshrss/freshrss:latest</span><br><span class="line">    container_name: freshrss-app</span><br><span class="line">    hostname: freshrss-app</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8088:80&quot;#左边端口号自行修改</span><br><span class="line">    depends_on:</span><br><span class="line">      - freshrss-db</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/var/www/FreshRSS/data</span><br><span class="line">      - ./extensions:/var/www/FreshRSS/extensions</span><br><span class="line">    environment:</span><br><span class="line">      CRON_MIN: &#x27;*/45&#x27;</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  freshrss-db:</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure><h3 id="一些设置"><a href="#一些设置" class="headerlink" title="一些设置"></a>一些设置</h3><p>一 设置-账户-账户管理-API管理设置密码</p><p>输入“<code>域名/api/</code>”获取第三方客户端登陆地址</p><p>主要有两个</p><p><code>/api/greader.php/</code></p><p><code>/api/fever.php/</code></p><p>二 设置-管理-认证</p><p>勾选API允许API访问</p><p>通过这简单的几步，你就成功地将Tiny Tiny RSS部署在了Docker容器中，为中年人的信息管理带来了新的解决方案。不再被信息泛滥所困扰，你可以更加自由、高效地获取到你想要的信息，让信息自由航行在你的生活中。</p><h1 id="安卓客户端推荐FeedMe"><a href="#安卓客户端推荐FeedMe" class="headerlink" title="安卓客户端推荐FeedMe"></a>安卓客户端推荐<a href="https://github.com/seazon/FeedMe/releases">FeedMe</a></h1><blockquote><p>注</p><p>ttrss地址直接填写服务器地址，fever 地址回报错</p><p>freshrss地址填写&#x2F;api&#x2F;greader.php&#x2F;</p></blockquote><p>RSS源推荐 <a href="RSSHUB.APP">RSSHUB.APP</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成都电信 Openwrt IPTV 设置</title>
      <link href="/2023/10/14/%E6%88%90%E9%83%BD%E7%94%B5%E4%BF%A1%20Openwrt%20IPTV%20%E8%AE%BE%E7%BD%AE/"/>
      <url>/2023/10/14/%E6%88%90%E9%83%BD%E7%94%B5%E4%BF%A1%20Openwrt%20IPTV%20%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="一-光猫桥接"><a href="#一-光猫桥接" class="headerlink" title="一 : 光猫桥接"></a>一 : 光猫桥接</h2><ul><li><h4 id="光猫-eth1-连接-OpenWrt-WAN-口-eth0"><a href="#光猫-eth1-连接-OpenWrt-WAN-口-eth0" class="headerlink" title="光猫 eth1 连接 OpenWrt WAN 口 eth0"></a>光猫 <code>eth1</code> 连接 OpenWrt <code>WAN</code> 口 <code>eth0</code></h4></li><li><h4 id="光猫-IPTV-口连接-OpenWrt-LAN-口-eth1"><a href="#光猫-IPTV-口连接-OpenWrt-LAN-口-eth1" class="headerlink" title="光猫 IPTV 口连接 OpenWrt LAN 口 eth1"></a>光猫 <code>IPTV</code> 口连接 OpenWrt <code>LAN</code> 口 <code>eth1</code></h4></li></ul><hr><h2 id="二-设置-OpenWrt"><a href="#二-设置-OpenWrt" class="headerlink" title="二 : 设置 OpenWrt"></a>二 : 设置 OpenWrt</h2><ol><li><h4 id="在-网络-接口-设备-中添加一个新的-VLAN-设备，设置-VLAN-ID-为-43（光猫-IPTV-的-VLAN-ID），绑定到-eth1-口（取消之前的-br-lan-绑定，以释放该端口）。"><a href="#在-网络-接口-设备-中添加一个新的-VLAN-设备，设置-VLAN-ID-为-43（光猫-IPTV-的-VLAN-ID），绑定到-eth1-口（取消之前的-br-lan-绑定，以释放该端口）。" class="headerlink" title="在 网络 - 接口 - 设备 中添加一个新的 VLAN 设备，设置 VLAN ID 为 43（光猫 IPTV 的 VLAN ID），绑定到 eth1 口（取消之前的 br lan 绑定，以释放该端口）。"></a>在 <strong>网络 - 接口 - 设备</strong> 中添加一个新的 <strong>VLAN</strong> 设备，设置 <strong>VLAN ID</strong> 为 <code>43</code>（光猫 IPTV 的 VLAN ID），绑定到 <code>eth1</code> 口（取消之前的 <code>br lan</code> 绑定，以释放该端口）。</h4></li></ol><p><img src="https://cloudflare.free-img.ososo.org/file/1731216718563_image-xngc.png" alt="添加 VLAN 设备"></p><ul><li>新建一个 IPTV 接口：</li><li>在 <strong>网络 - 接口</strong> 中，接口类型选择 <strong>静态</strong>，IP 地址可随意设置，子网掩码设为 <code>255.255.255.0</code>。</li><li>物理设备绑定为之前创建的 VLAN（例如：<code>eth1.43</code>，如果之前绑定的是 <code>eth2</code>，则为 <code>eth2.43</code>）。</li></ul><p><img src="https://cloudflare.free-img.ososo.org/file/1731216725307_image-ftgo.png" alt="新建 IPTV 接口"></p><ol start="2"><li><h4 id="高级设置："><a href="#高级设置：" class="headerlink" title="高级设置："></a>高级设置：</h4></li></ol><ul><li>取消勾选 <strong>使用默认网关</strong>。</li><li><strong>网关跃点</strong> 设置为 <code>50</code>，其他默认即可。</li></ul><p><img src="https://cloudflare.free-img.ososo.org/file/1731216717661_image-regz.png" alt="高级设置"></p><ol start="3"><li><h4 id="防火墙设置："><a href="#防火墙设置：" class="headerlink" title="防火墙设置："></a>防火墙设置：</h4></li></ol><ul><li>新建一个名为 <strong>IPTV</strong> 的防火墙。</li></ul><p><img src="https://cloudflare.free-img.ososo.org/file/1731216716300_image-xvsc.png" alt="防火墙设置"></p><hr><ol start="4"><li><h4 id="设置-WAN-口网络跃点"><a href="#设置-WAN-口网络跃点" class="headerlink" title="设置 WAN 口网络跃点"></a>设置 WAN 口网络跃点</h4></li></ol><ul><li>在 <strong>网络 - 接口</strong> 中，设置 <strong>WAN</strong> 口的跃点为 <code>20</code>（比 IPTV 设置的小即可，数值不限）。</li></ul><hr><h2 id="三-设置防火墙"><a href="#三-设置防火墙" class="headerlink" title="三 : 设置防火墙"></a>三 : 设置防火墙</h2><ol><li><h4 id="网络-防火墙-区域"><a href="#网络-防火墙-区域" class="headerlink" title="网络 - 防火墙 - 区域"></a>网络 - 防火墙 - 区域</h4></li></ol><p>找到 <strong>IPTV</strong> 区域，编辑并按照图示进行设置。</p><p><img src="https://cloudflare.free-img.ososo.org/file/1731216719808_image-wumj.png" alt="防火墙区域设置"></p><hr><h2 id="四-启用-OpenWrt-上的-udpxy-插件"><a href="#四-启用-OpenWrt-上的-udpxy-插件" class="headerlink" title="四 : 启用 OpenWrt 上的 udpxy 插件"></a>四 : 启用 OpenWrt 上的 udpxy 插件</h2><p>如果尚未安装 <strong>udpxy</strong> 插件，请先安装。</p><ol><li>添加一个 IPTV <strong>udpxy</strong> 配置：</li><li>绑定 <strong>IP</strong> 为 OpenWrt <strong>WAN</strong> 口的 IP，端口设置为 <code>4022</code>。</li><li>源 IP 设置为刚才新建的 IPTV 接口 <code>eth1.43</code>。</li></ol><p><img src="https://cloudflare.free-img.ososo.org/file/1731216717347_image-kkej.png" alt="配置 udpxy"></p><ul><li>保存设置后，访问 <code>http://192.168.88.1:4022/status</code>，如果配置正确，页面应显示如下内容：</li></ul><p><img src="https://cloudflare.free-img.ososo.org/file/1731216718062_image-dsxh.png" alt="udpxy 状态"></p><hr><ol start="4"><li>导入直播地址观看 IPTV</li></ol><p>正确的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://0.0.0.0:0000/udp/239.93.0.184:5140</span><br></pre></td></tr></table></figure><p>将地址中的 <code>0.0.0.0</code> 替换为 OpenWrt 的 <strong>IP</strong> 地址，端口号为 <code>4022</code>，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.88.1:4022/udp/239.93.0.184:5140</span><br></pre></td></tr></table></figure><hr><h2 id="五-成都电信-IPTV-组播地址"><a href="#五-成都电信-IPTV-组播地址" class="headerlink" title="五 : 成都电信 IPTV 组播地址"></a>五 : 成都电信 IPTV 组播地址</h2><ul><li><p>以下是成都电信 IPTV 的组播地址列表：</p></li><li><p><a href="https://raw.githubusercontent.com/imDazui/Tvlist-awesome-m3u-m3u8/master/m3u/%E5%9B%9B%E5%B7%9D%E6%88%90%E9%83%BD%E7%94%B5%E4%BF%A1udp%E7%BB%84%E6%92%AD.m3u">四川成都电信 UDP 组播 M3U 列表</a></p></li><li><p><a href="images/1cdIPTVudp.m3u">1cdIPTVudp.m3u</a></p></li></ul><hr><h2 id="配合家庭影音服务器实现异地观看"><a href="#配合家庭影音服务器实现异地观看" class="headerlink" title="配合家庭影音服务器实现异地观看"></a>配合家庭影音服务器实现异地观看</h2><ul><li>通过家庭影音服务器，则可以实现 IPTV 的异地观看功能。</li></ul><p><img src="https://cloudflare.free-img.ososo.org/file/1731216723840_image-svwx.png" alt="异地观看"></p><hr>]]></content>
      
      
      <categories>
          
          <category> Openwrt </category>
          
          <category> IPTV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPTV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker部署SearXNG 搜索引擎，隐私无广告</title>
      <link href="/2023/10/09/Docker%E9%83%A8%E7%BD%B2SearXNG%20%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%EF%BC%8C%E9%9A%90%E7%A7%81%E6%97%A0%E5%B9%BF%E5%91%8A/"/>
      <url>/2023/10/09/Docker%E9%83%A8%E7%BD%B2SearXNG%20%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%EF%BC%8C%E9%9A%90%E7%A7%81%E6%97%A0%E5%B9%BF%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="一-部署Docker，有的话直接跳过"><a href="#一-部署Docker，有的话直接跳过" class="headerlink" title="一 部署Docker，有的话直接跳过"></a>一 部署Docker，有的话直接跳过</h1><h2 id="1-安装Docker"><a href="#1-安装Docker" class="headerlink" title="1 安装Docker"></a>1 安装Docker</h2><p>从远程服务器下载并安装Docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br></pre></td></tr></table></figure><p>查看版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p>启动docker服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now docker</span><br></pre></td></tr></table></figure><h2 id="2-安装Docker-Compose"><a href="#2-安装Docker-Compose" class="headerlink" title="2 安装Docker Compose"></a>2 安装Docker Compose</h2><p>从远程服务器拉取Docker Compose</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>赋予可执行权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><p>查看docker版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p>查看docker compose版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h1 id="二-开始安装SearXNG"><a href="#二-开始安装SearXNG" class="headerlink" title="二. 开始安装SearXNG"></a>二. 开始安装SearXNG</h1><h2 id="2-1-拉取Docker项目"><a href="#2-1-拉取Docker项目" class="headerlink" title="2.1 拉取Docker项目"></a>2.1 拉取Docker项目</h2><p>创建安装目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/docker/searxng</span><br></pre></td></tr></table></figure><p>克隆docker项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/searxng/searxng-docker.git /opt/docker/searxng</span><br></pre></td></tr></table></figure><h2 id="2-2-配置文件修改"><a href="#2-2-配置文件修改" class="headerlink" title="2.2 配置文件修改"></a>2.2 配置文件修改</h2><p>使用文本编辑器编辑<code>nano docker-compose.yaml</code>文件，自行修改端口号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.7&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    container_name: redis</span><br><span class="line">    image: &quot;redis:alpine&quot;</span><br><span class="line">    command: redis-server --save &quot;&quot; --appendonly &quot;no&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - searxng</span><br><span class="line">    tmpfs:</span><br><span class="line">      - /var/lib/redis</span><br><span class="line">    cap_drop:</span><br><span class="line">      - ALL</span><br><span class="line">    cap_add:</span><br><span class="line">      - SETGID</span><br><span class="line">      - SETUID</span><br><span class="line">      - DAC_OVERRIDE</span><br><span class="line"></span><br><span class="line">  searxng:</span><br><span class="line">    container_name: searxng</span><br><span class="line">    image: searxng/searxng:latest</span><br><span class="line">    networks:</span><br><span class="line">      - searxng</span><br><span class="line">    ports:</span><br><span class="line">     - &quot;8180:8080&quot;#映射端口可修改为未被占用的</span><br><span class="line">    volumes:</span><br><span class="line">      - ./searxng:/etc/searxng:rw</span><br><span class="line">    environment:</span><br><span class="line">      - SEARXNG_BASE_URL=https://$&#123;SEARXNG_HOSTNAME:-localhost&#125;/</span><br><span class="line">    cap_drop:</span><br><span class="line">      - ALL</span><br><span class="line">    cap_add:</span><br><span class="line">      - CHOWN</span><br><span class="line">      - SETGID</span><br><span class="line">      - SETUID</span><br><span class="line">    logging:</span><br><span class="line">      driver: &quot;json-file&quot;</span><br><span class="line">      options:</span><br><span class="line">        max-size: &quot;1m&quot;</span><br><span class="line">        max-file: &quot;1&quot;</span><br><span class="line">networks:</span><br><span class="line">  searxng:</span><br><span class="line">    ipam:</span><br><span class="line">      driver: default</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8180#检测端口是否被占用,</span><br></pre></td></tr></table></figure><p>使用文本编辑器编辑.env文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nano .env</span><br><span class="line"></span><br><span class="line">SEARXNG_HOSTNAME=search.example.com#修改为你的域名或IP+端口</span><br><span class="line">#LETSENCRYPT_EMAIL=admin@example.com</span><br></pre></td></tr></table></figure><p>使用openssl生成密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/docker/searxng</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s|ultrasecretkey|$(openssl rand -hex 32)|g&quot; searxng/settings.yml</span><br></pre></td></tr></table></figure><h2 id="2-3-配置防火墙"><a href="#2-3-配置防火墙" class="headerlink" title="2.3 配置防火墙"></a>2.3 配置防火墙</h2><p>服务商控制台添加规则，设置SearXNG的端口号（如8180），设置为允许，<br>没有的可以跳过，或自行使用防火墙工具进行管理。<br>当然你也可以使用Nginx进行带向代理。</p><p>2.4 启动Docker容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/docker/searxng</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>2.5更新容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose pull &amp;&amp; docker compose up -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inter 12代处理器PVE Sriov 流程</title>
      <link href="/2023/10/03/Inter%2012%E4%BB%A3%E5%A4%84%E7%90%86%E5%99%A8PVE%20Sriov%20%E6%B5%81%E7%A8%8B/"/>
      <url>/2023/10/03/Inter%2012%E4%BB%A3%E5%A4%84%E7%90%86%E5%99%A8PVE%20Sriov%20%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一、PVE安装命令行跳过检测方法："><a href="#一、PVE安装命令行跳过检测方法：" class="headerlink" title="一、PVE安装命令行跳过检测方法："></a>一、PVE安装命令行跳过检测方法：</h2><p>配置文件中创建一个设备描述</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /usr/share/X11/xorg.conf.d/10-quirks.conf</span><br></pre></td></tr></table></figure><p> 在结尾添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Section &quot;Device&quot;    </span><br><span class="line">    Identifier &quot;Card0&quot;     </span><br><span class="line">    Driver &quot;fbdev&quot;</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>ctrl+x  y 回车保存退出</p><p> <code># xinit</code></p><p>回车运行后会进入熟悉的PVE图形化安装界面，安装完成。</p><p> 启动PVE，进入WebUI</p><h2 id="二、PVE换源："><a href="#二、PVE换源：" class="headerlink" title="二、PVE换源："></a>二、PVE换源：</h2><h2 id="1、更换为国内清华源："><a href="#1、更换为国内清华源：" class="headerlink" title="1、更换为国内清华源："></a>1、更换为国内清华源：</h2><p>将自带的源文件sources.list备份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list_bak</span><br></pre></td></tr></table></figure><p> 编辑sources.list</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>粘贴一下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><br></pre></td></tr></table></figure><p>ctrl+x 点y 回车保存退出</p><p>编辑pve企业源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/apt/sources.list.d/pve-enterprise.list</span><br></pre></td></tr></table></figure><blockquote><p>将其中原有的proxmox句首加# 注释掉，变为：#deb <a href="https://enterprise.proxmox.com/debian/pve">https://enterprise.proxmox.com/debian/pve</a> bullseye pve-enterprise</p></blockquote><p>添加以下清华源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscription</span><br></pre></td></tr></table></figure><p>ctrl+x  y 回车保存退出</p><p>更新并升级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt dist-upgrade -y</span><br></pre></td></tr></table></figure><h2 id="2、LXC更换为清华源："><a href="#2、LXC更换为清华源：" class="headerlink" title="2、LXC更换为清华源："></a>2、LXC更换为清华源：</h2><p><a href="http://备份aplinfo.pm/">备份APLInfo.pm</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/perl5/PVE/APLInfo.pm /usr/share/perl5/PVE/APLInfo.pm_back</span><br></pre></td></tr></table></figure><p>更换为清华源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s|http://download.proxmox.com|https://mirrors.tuna.tsinghua.edu.cn/proxmox|g&#x27; /usr/share/perl5/PVE/APLInfo.pm</span><br></pre></td></tr></table></figure><p>重启服务后生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart pvedaemon.service</span><br></pre></td></tr></table></figure><h2 id="三、升级6-2内核、headers和firmware"><a href="#三、升级6-2内核、headers和firmware" class="headerlink" title="三、升级6.2内核、headers和firmware"></a>三、升级6.2内核、headers和firmware</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y pve-kernel-6.2.11-2-pve pve-headers-6.2.11-2-pve pve-firmware</span><br></pre></td></tr></table></figure><p>重启reboot</p><h2 id="四、编译i915-sriov驱动"><a href="#四、编译i915-sriov驱动" class="headerlink" title="四、编译i915-sriov驱动"></a>四、编译i915-sriov驱动</h2><p>安装工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y build-* git dkms</span><br></pre></td></tr></table></figure><p>拖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/strongtz/i915-sriov-dkms.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> cd i915-sriov-dkms</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> nano dkms.conf</span><br></pre></td></tr></table></figure><p>第一行改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PACKAGE_NAME=&quot;i915-sriov-dkms&quot;</span><br></pre></td></tr></table></figure><p>第二行改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PACKAGE_VERSION=&quot;6.2&quot;</span><br></pre></td></tr></table></figure><p>ctrl+x  y 回车保存退出</p><p>复制此文件夹到相应目录，开始编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /root/i915-sriov-dkms/ /usr/src/i915-sriov-dkms-6.2</span><br></pre></td></tr></table></figure><p>进入目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/src/i915-sriov-dkms-6.2</span><br></pre></td></tr></table></figure><p>pve7.x执行编译命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dkms install -m i915-sriov-dkms -v 6.2</span><br></pre></td></tr></table></figure><p>pve8.0执行编译命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dkms install -m i915-sriov-dkms -v 6.2 --force</span><br></pre></td></tr></table></figure><p> 编译完成后检查状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dkms status</span><br></pre></td></tr></table></figure><h2 id="五、设置直通和i915guc"><a href="#五、设置直通和i915guc" class="headerlink" title="五、设置直通和i915guc"></a>五、设置直通和i915guc</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/default/grub</span><br></pre></td></tr></table></figure><p>在quiet后添加<code>intel_iommu=on i915.enable_guc=3 i915.max_vfs=7</code></p><blockquote><p>改成GRUB_CMDLINE_LINUX_DEFAULT&#x3D;”quiet intel_iommu&#x3D;on i915.enable_guc&#x3D;3 i915.max_vfs&#x3D;7”</p></blockquote><p>ctrl+x  y 回车保存退出</p><p>顺便把设备直通的其他操作一起做了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/modules</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vfio</span><br><span class="line"></span><br><span class="line">vfio_iommu_type1</span><br><span class="line"></span><br><span class="line">vfio_pci</span><br><span class="line"></span><br><span class="line">vfio_virqfd</span><br></pre></td></tr></table></figure><p>更新配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br><span class="line"></span><br><span class="line">update-initramfs -u</span><br></pre></td></tr></table></figure><h2 id="六、安装sysfsutils"><a href="#六、安装sysfsutils" class="headerlink" title="六、安装sysfsutils"></a>六、安装sysfsutils</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y sysfsutils</span><br></pre></td></tr></table></figure><p>添加以下VFs参数，N100建议最高3，可自定义数量，建议按需设置，设置1个时性能最强。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;devices/pci0000:00/0000:00:02.0/sriov_numvfs = 3&quot; &gt; /etc/sysfs.conf</span><br></pre></td></tr></table></figure><p>重启reboot</p><p>lspci检查直通的虚拟显卡，显示如下：</p><p>00:02.0 VGA compatible controller: Intel Corporation Device 46d1（物理核显）</p><p>00:02.1 VGA compatible controller: Intel Corporation Device 46d1（虚拟核显1）</p><p>00:02.2 VGA compatible controller: Intel Corporation Device 46d1（虚拟核显2）</p><p>00:02.3 VGA compatible controller: Intel Corporation Device 46d1（虚拟核显3）</p><p>注意虚拟核显越多，性能越低。只需要1个时，虚拟1个核显即可。就像切西瓜，整体就这么大，人数越多每个人分到的瓜越小。</p><h2 id="七、将虚拟核显添加到虚拟机中，如Win10-11"><a href="#七、将虚拟核显添加到虚拟机中，如Win10-11" class="headerlink" title="七、将虚拟核显添加到虚拟机中，如Win10&#x2F;11"></a>七、将虚拟核显添加到虚拟机中，如Win10&#x2F;11</h2><blockquote><p>硬件内注意事项：</p><p>内存：4GiB （或者更多）</p><p>CPU类别：host （硬解建议给全部核心，比如N100 4cores）</p><p>BIOS：OVMF(UEFI)</p><p>显示：默认标准 核显直通后可改为无(none) *注意选择无(none)时长时间运行会出问题【VM 100 qmp command ‘set_password’ failed - Could not set password】导致虚拟Win死机时，则需改为标准VGA(std)</p><p>机型：pc-q35-7.2</p><p>PCI设备虚拟核显：安装Win时建议不添加，Win装完关机添加虚拟核显时不要勾选主GPU，安装驱动并重启后不报错工作正常后，可以更改为主GPU</p></blockquote><p>Windows虚拟机</p><p>为了提高Win虚拟机的性能，建议安装VirtIO的全部驱动，iso下载地址：</p><p><a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.229-1/virtio-win-0.1.229.iso">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.229-1/virtio-win-0.1.229.iso</a></p><p>在必须满足虚拟机配置的前提下，安装当前最新的驱动，下面2个，二选一自行测试。</p><p>英特尔® Arc™ 和锐炬® Xe 显卡 - WHQL - Windows* (<a href="http://intel.cn/">intel.cn</a>)</p><p><a href="https://www.intel.cn/content/www/cn/zh/download/726609/intel-arc-iris-xe-graphics-whql-windows.html">https://www.intel.cn/content/www/cn/zh/download/726609/intel-arc-iris-xe-graphics-whql-windows.html</a>?</p><p>英特尔® Arc™ 和锐®炬® Xe 显卡 - BETA - Windows* (<a href="http://intel.cn/">intel.cn</a>)</p><p><a href="https://www.intel.cn/content/www/cn/zh/download/729157/intel-arc-iris-xe-graphics-beta-windows.html">https://www.intel.cn/content/www/cn/zh/download/729157/intel-arc-iris-xe-graphics-beta-windows.html</a></p><p>Linux虚拟机：</p><p>虚拟Ubuntu直通SRIOV核显参照以下“Linux虚拟机”部分</p><p><a href="https://foxi.buduanwang.vip/virtualization/pve/2695.html/">https://foxi.buduanwang.vip/virtualization/pve/2695.html/</a></p><p>虚拟Deiban直通SRIOV核显参照以下“Linux虚拟机使用pve内核–不适用全部情况”</p><p><a href="https://foxi.buduanwang.vip/virtualization/pve/2695.html/">https://foxi.buduanwang.vip/virtualization/pve/2695.html/</a></p><p>英特尔官网核显驱动方法<a href="https://dgpu-docs.intel.com/installation-guides/ubuntu/ubuntu-focal-legacy.html#">https://dgpu-docs.intel.com/installation-guides/ubuntu/ubuntu-focal-legacy.html#</a></p><h2 id="附送一个PVE8-X-一键换源，直通，Sriov-脚本"><a href="#附送一个PVE8-X-一键换源，直通，Sriov-脚本" class="headerlink" title="附送一个PVE8.X 一键换源，直通，Sriov 脚本"></a>附送一个PVE8.X 一键换源，直通，Sriov 脚本</h2><p><a href="http://1换源.sh/">1换源.sh</a></p><p><a href="https://blog.aikiller.top/upload/2%E7%9B%B4%E9%80%9Asriov%20for%20Bard.sh">2直通sriov for</a> <a href="http://bard.sh/">Bard.sh</a></p><blockquote><p>参考引用：</p><p><a href="https://github.com/strongtz/i915-sriov-dkms">https://github.com/strongtz/i915-sriov-dkms</a></p><p><a href="https://foxi.buduanwang.vip/virtualization/pve/2695.html/">https://foxi.buduanwang.vip/virtualization/pve/2695.html/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用CloudflareTunnel 上线本地服务，无需备案，公网服务器，白嫖福音</title>
      <link href="/2023/09/21/%E5%88%A9%E7%94%A8Cloudflare%20Tunnel%20%E4%B8%8A%E7%BA%BF%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%EF%BC%8C%E5%BA%94%E7%94%A8%EF%BC%8C%E6%97%A0%E9%9C%80%E5%A4%87%E6%A1%88%EF%BC%8C%E6%97%A0%E9%9C%80%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E7%99%BD%E5%AB%96%E7%A6%8F%E9%9F%B3/"/>
      <url>/2023/09/21/%E5%88%A9%E7%94%A8Cloudflare%20Tunnel%20%E4%B8%8A%E7%BA%BF%E6%9C%AC%E5%9C%B0%E7%BD%91%E7%AB%99%EF%BC%8C%E5%BA%94%E7%94%A8%EF%BC%8C%E6%97%A0%E9%9C%80%E5%A4%87%E6%A1%88%EF%BC%8C%E6%97%A0%E9%9C%80%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E7%99%BD%E5%AB%96%E7%A6%8F%E9%9F%B3/</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><ol><li>一个解析到cloud flare的域名 （教程请自行搜索）</li><li>一张外币信用卡或者 PayPal<br><del>推荐一个虚拟信用卡 <a href="https://card.onekey.so/?i=ZEIPBH">Onekey</a></del></li></ol></blockquote><h3 id="1-开通-CloudFlare-Tunnel"><a href="#1-开通-CloudFlare-Tunnel" class="headerlink" title="1. 开通 CloudFlare Tunnel"></a>1. <strong>开通</strong> <a href="https://one.dash.cloudflare.com/"><strong>CloudFlare Tunnel</strong></a></h3><p><img src="https://cloudflare.free-img.ososo.org/file/1732424604409_image-uvix.png"></p><h3 id="2-绑定一个支付方式，选择免费套餐，只做验证不会扣款"><a href="#2-绑定一个支付方式，选择免费套餐，只做验证不会扣款" class="headerlink" title="2. 绑定一个支付方式，选择免费套餐，只做验证不会扣款"></a>2. 绑定一个支付方式，选择免费套餐，只做验证不会扣款</h3><p><img src="https://cloudflare.free-img.ososo.org/file/1732424733548_image-bdlg.png"></p><h3 id="3-创建Tunnels-隧道"><a href="#3-创建Tunnels-隧道" class="headerlink" title="3. 创建Tunnels 隧道"></a>3. 创建<strong>Tunnels 隧道</strong></h3><p><img src="https://cloudflare.free-img.ososo.org/file/1732424855800_image-etzj.png"><br><img src="https://cloudflare.free-img.ososo.org/file/1732424907922_image-lvmu.png"></p><h3 id="4-选择安装环境"><a href="#4-选择安装环境" class="headerlink" title="4. 选择安装环境"></a>4. 选择安装环境</h3><p><img src="https://cloudflare.free-img.ososo.org/file/1732425031804_image-ctxy.png"></p><h4 id="这里以Docker为演示"><a href="#这里以Docker为演示" class="headerlink" title="这里以Docker为演示"></a>这里以Docker为演示</h4><p><img src="https://cloudflare.free-img.ososo.org/file/1732425110132_image-yxba.png">在安装有<code>docker</code>的主机上执行上面的命令，完成后<strong>Status 显示为健康</strong>即可接着下一步<br><img src="https://cloudflare.free-img.ososo.org/file/1732425233239_image-dqld.png"></p><h3 id="5-上线内网服务"><a href="#5-上线内网服务" class="headerlink" title="5. 上线内网服务"></a>5. 上线内网服务</h3><ol><li><p>选择刚才创建的隧道<br><img src="https://cloudflare.free-img.ososo.org/file/1732425312197_image-guzj.png" alt="image-guzj.png">点击 Add a public * 创建服务</p></li><li><p>填写二级域名以及你本地项目的地址，之后保存即可。<br><img src="https://cloudflare.free-img.ososo.org/file/1732425415007_image-mnie.png"><br> <strong><strong>注意你本地项目的通讯类型</strong> <em><strong>HTTP</strong></em> <em><strong>HTTPS</strong></em></strong></p></li></ol><h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h4><p><img src="https://cloudflare.free-img.ososo.org/file/1732425556897_image-xtoz.png" alt="image-xtoz.png"></p><blockquote><p>可以利用<code>Access</code>给你的网站添加密码<br><img src="https://cloudflare.free-img.ososo.org/file/1732425688555_image-tdrd.png"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Cloudflare </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
